{"version":3,"sources":["src/controllers/AboutController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,6DAAgF;AAChF,yBAAyB;AAGzB,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA8BG;IAGG,eAAe;;YACnB,IAAI;gBACF,OAAO,MAAM,EAAE,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;aACnD;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,+BAAS,CAAC,GAAG,EAAE,uBAAuB,CAAC,CAAC;aACnD;QACH,CAAC;KAAA;CACF,CAAA;AAPC;IAFC,yBAAG,CAAC,eAAe,CAAC;IACpB,iCAAW,CAAC,kBAAkB,CAAC;;;;sDAO/B;AAzCU,eAAe;IAD3B,oCAAc,CAAC,QAAQ,CAAC;GACZ,eAAe,CA0C3B;AA1CY,0CAAe","file":"../../../src/controllers/AboutController.js","sourcesContent":["import {ContentType, Get, HttpError, JsonController} from 'routing-controllers';\r\nimport * as fs from 'fs';\r\n\r\n@JsonController('/about')\r\nexport class AboutController {\r\n\r\n  /**\r\n   * @api {get} /api/about/dependencies Request dependencies\r\n   * @apiName GetAboutDependencies\r\n   * @apiGroup About\r\n   *\r\n   * @apiSuccess {Object[]} data Information about dependencies.\r\n   *\r\n   * @apiSuccessExample {json} Success-Response:\r\n   *     {\r\n   *         \"data\": [{\r\n   *             \"name\": \"bcrypt\",\r\n   *             \"version\": \"1.0.3\",\r\n   *             \"repository\": \"https://github.com/kelektiv/node.bcrypt.js\",\r\n   *             \"license\": \"MIT\",\r\n   *             \"devDependency\": false\r\n   *         }, {\r\n   *             \"name\": \"express\",\r\n   *             \"version\": \"4.16.2\",\r\n   *             \"repository\": \"https://github.com/expressjs/express\",\r\n   *             \"devDependency\": false\r\n   *         }, {\r\n   *             \"name\": \"winston\",\r\n   *             \"version\": \"2.4.0\",\r\n   *             \"repository\": \"https://github.com/winstonjs/winston\",\r\n   *             \"license\": \"MIT\",\r\n   *             \"devDependency\": false\r\n   *         }]\r\n   *     }\r\n   *\r\n   * @apiError HttpError 500 - Licensefile not found\r\n   */\r\n  @Get('/dependencies')\r\n  @ContentType('application/json')\r\n  async getDependencies() {\r\n    try {\r\n      return await fs.readFileSync('nlf-licenses.json');\r\n    } catch (err) {\r\n      throw new HttpError(500, 'Licensefile not found');\r\n    }\r\n  }\r\n}\r\n"]}