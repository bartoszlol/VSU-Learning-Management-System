{"version":3,"sources":["src/controllers/MediaController.ts"],"names":[],"mappings":"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","file":"../../../src/controllers/MediaController.js","sourcesContent":["import {\r\n  Authorized, UseBefore, Body, CurrentUser, Delete, Get, JsonController, NotFoundError, ForbiddenError, Param, Post, Put,\r\n  UploadedFile\r\n} from 'routing-controllers';\r\nimport passportJwtMiddleware from '../security/passportJwtMiddleware';\r\nimport {Directory} from '../models/mediaManager/Directory';\r\nimport {File} from '../models/mediaManager/File';\r\nimport {Course} from '../models/Course';\r\nimport {IDirectory} from '../../../shared/models/mediaManager/IDirectory';\r\nimport {IFile} from '../../../shared/models/mediaManager/IFile';\r\nimport {IUser} from '../../../shared/models/IUser';\r\nimport {extractSingleMongoId} from '../utilities/ExtractMongoId';\r\nimport crypto = require('crypto');\r\nimport config from '../config/main';\r\n\r\nconst multer = require('multer');\r\nconst path = require('path');\r\n\r\nconst uploadOptions = {\r\n  storage: multer.diskStorage({\r\n    destination: (req: any, file: any, cb: any) => {\r\n      cb(null, config.uploadFolder);\r\n    },\r\n    filename: (req: any, file: any, cb: any) => {\r\n      crypto.pseudoRandomBytes(16, (err, raw) => {\r\n        cb(err, err ? undefined : raw.toString('hex') + path.extname(file.originalname));\r\n      });\r\n    }\r\n  }),\r\n};\r\n\r\n@JsonController('/media')\r\n@UseBefore(passportJwtMiddleware)\r\nexport class MediaController {\r\n  @Authorized(['student', 'teacher', 'admin'])\r\n  @Get('/directory/:id')\r\n  async getDirectory(@Param('id') directoryId: string, @CurrentUser() currentUser: IUser) {\r\n    const directory = await Directory.findById(directoryId);\r\n    await this.checkCoursePrivilegesFor(directory, currentUser, 'userCanViewCourse');\r\n    return directory.toObject();\r\n  }\r\n\r\n  @Authorized(['student', 'teacher', 'admin'])\r\n  @Get('/directory/:id/lazy')\r\n  async getDirectoryLazy(@Param('id') directoryId: string, @CurrentUser() currentUser: IUser) {\r\n    const directory = await Directory.findById(directoryId)\r\n      .populate('subDirectories')\r\n      .populate('files');\r\n    await this.checkCoursePrivilegesFor(directory, currentUser, 'userCanViewCourse');\r\n    return directory.toObject();\r\n  }\r\n\r\n  @Authorized(['student', 'teacher', 'admin'])\r\n  @Get('/file/:id')\r\n  async getFile(@Param('id') fileId: string, @CurrentUser() currentUser: IUser) {\r\n    const file = await File.findById(fileId);\r\n    await this.checkCoursePrivilegesFor(file, currentUser, 'userCanViewCourse');\r\n    return file.toObject();\r\n  }\r\n\r\n  @Authorized(['teacher', 'admin'])\r\n  @Post('/directory')\r\n  async createRootDirectory(@Body() directory: IDirectory, @CurrentUser() currentUser: IUser) {\r\n    await this.checkCoursePrivilegesFor(directory, currentUser, 'userCanEditCourse');\r\n    const savedDirectory = await new Directory(directory).save();\r\n    return savedDirectory.toObject();\r\n  }\r\n\r\n  @Authorized(['teacher', 'admin'])\r\n  @Post('/directory/:parent')\r\n  async createDirectory(@Param('parent') parentDirectoryId: string, @Body() directory: IDirectory, @CurrentUser() currentUser: IUser) {\r\n    const parent = await Directory.findById(parentDirectoryId);\r\n    await this.checkCoursePrivilegesFor(parent, currentUser, 'userCanEditCourse');\r\n    directory._course = parent._course;\r\n    const savedDirectory = await new Directory(directory).save();\r\n\r\n    parent.subDirectories.push(savedDirectory);\r\n    await parent.save();\r\n\r\n    return savedDirectory.toObject();\r\n  }\r\n\r\n  @Authorized(['teacher', 'admin'])\r\n  @Post('/file/:parent')\r\n  async createFile(@Param('parent') parentDirectoryId: string,\r\n                   @UploadedFile('file', {options: uploadOptions}) uploadedFile: any,\r\n                   @CurrentUser() currentUser: IUser) {\r\n    const parent = await Directory.findById(parentDirectoryId);\r\n    await this.checkCoursePrivilegesFor(parent, currentUser, 'userCanEditCourse');\r\n    const file: IFile = new File({\r\n      _course: parent._course,\r\n      name: uploadedFile.originalname,\r\n      physicalPath: uploadedFile.path,\r\n      link: uploadedFile.filename,\r\n      size: uploadedFile.size,\r\n      mimeType: uploadedFile.mimetype,\r\n    });\r\n    const savedFile = await new File(file).save();\r\n\r\n    parent.files.push(savedFile);\r\n    await parent.save();\r\n\r\n    return savedFile.toObject();\r\n  }\r\n\r\n  @Authorized(['teacher', 'admin'])\r\n  @Put('/directory/:id')\r\n  async updateDirectory(@Param('id') directoryId: string, @Body() updatedDirectory: IDirectory, @CurrentUser() currentUser: IUser) {\r\n    const directory = await Directory.findById(directoryId);\r\n    await this.checkCoursePrivilegesFor(directory, currentUser, 'userCanEditCourse');\r\n    if (extractSingleMongoId(directory._course) !== extractSingleMongoId(updatedDirectory._course)) {\r\n      await this.checkCoursePrivilegesFor(updatedDirectory, currentUser, 'userCanEditCourse');\r\n    }\r\n    directory.set(updatedDirectory);\r\n    const savedDirectory = await directory.save();\r\n    return savedDirectory.toObject();\r\n  }\r\n\r\n  @Authorized(['teacher', 'admin'])\r\n  @Put('/file/:id')\r\n  async updateFile(@Param('id') fileId: string, @Body() updatedFile: IFile, @CurrentUser() currentUser: IUser) {\r\n    const file = await File.findById(fileId);\r\n    await this.checkCoursePrivilegesFor(file, currentUser, 'userCanEditCourse');\r\n    if (extractSingleMongoId(file._course) !== extractSingleMongoId(updatedFile._course)) {\r\n      await this.checkCoursePrivilegesFor(updatedFile, currentUser, 'userCanEditCourse');\r\n    }\r\n    file.set(updatedFile);\r\n    const savedFile = await file.save();\r\n    return savedFile.toObject();\r\n  }\r\n\r\n  @Authorized(['teacher', 'admin'])\r\n  @Delete('/directory/:id')\r\n  async deleteDirectory(@Param('id') directoryId: string, @CurrentUser() currentUser: IUser) {\r\n    const directoryToDelete = await Directory.findById(directoryId).orFail(new NotFoundError());\r\n    await this.checkCoursePrivilegesFor(directoryToDelete, currentUser, 'userCanEditCourse');\r\n    await directoryToDelete.remove();\r\n    return {};\r\n  }\r\n\r\n  @Authorized(['teacher', 'admin'])\r\n  @Delete('/file/:id')\r\n  async deleteFile(@Param('id') fileId: string, @CurrentUser() currentUser: IUser) {\r\n    const fileToDelete = await File.findById(fileId).orFail(new NotFoundError());\r\n    await this.checkCoursePrivilegesFor(fileToDelete, currentUser, 'userCanEditCourse');\r\n    await fileToDelete.remove();\r\n    return {};\r\n  }\r\n\r\n  private async checkCoursePrivilegesFor (\r\n      directoryOrFile: IDirectory | IFile,\r\n      currentUser: IUser,\r\n      privilege: 'userCanViewCourse' | 'userCanEditCourse') {\r\n    const course = await Course.findById(directoryOrFile._course);\r\n    if (!course.checkPrivileges(currentUser)[privilege]) {\r\n      throw new ForbiddenError();\r\n    }\r\n  }\r\n}\r\n"]}