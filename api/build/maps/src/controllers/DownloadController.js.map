{"version":3,"sources":["src/controllers/DownloadController.ts"],"names":[],"mappings":"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","file":"../../../src/controllers/DownloadController.js","sourcesContent":["import {promisify} from 'util';\r\nimport {Response} from 'express';\r\nimport {\r\n  Authorized,\r\n  BadRequestError,\r\n  Body,\r\n  ContentType,\r\n  Controller,\r\n  CurrentUser,\r\n  Delete,\r\n  ForbiddenError,\r\n  Get,\r\n  NotFoundError,\r\n  Param,\r\n  Post,\r\n  Res,\r\n  UseBefore\r\n} from 'routing-controllers';\r\nimport passportJwtMiddleware from '../security/passportJwtMiddleware';\r\nimport {Unit} from '../models/units/Unit';\r\nimport {IDownload} from '../../../shared/models/IDownload';\r\nimport {IFileUnit} from '../../../shared/models/units/IFileUnit';\r\nimport {Lecture} from '../models/Lecture';\r\nimport {IUser} from '../../../shared/models/IUser';\r\nimport {Course} from '../models/Course';\r\nimport config from '../config/main';\r\nimport {errorCodes} from '../config/errorCodes';\r\n\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport {File} from '../models/mediaManager/File';\r\nimport {ICourse} from '../../../shared/models/ICourse';\r\nimport * as mongoose from 'mongoose';\r\nimport {CreateOptions} from 'html-pdf';\r\n\r\nimport crypto = require('crypto');\r\nimport archiver = require('archiver');\r\n\r\nconst pdf = require('html-pdf');\r\nconst phantomjs = require('phantomjs-prebuilt');\r\nconst binPath = phantomjs.path;\r\n\r\n\r\n// Set all routes which should use json to json, the standard is blob streaming data\r\n@Controller('/download')\r\n@UseBefore(passportJwtMiddleware)\r\nexport class DownloadController {\r\n\r\n  private markdownCss: string;\r\n\r\n  constructor() {\r\n    setInterval(this.cleanupCache, config.timeToLiveCacheValue * 60);\r\n    this.markdownCss = this.readMarkdownCss();\r\n  }\r\n\r\n  cleanupCache() {\r\n    const expire = Date.now() - 3600 * 1000;\r\n    const files = fs.readdirSync(config.tmpFileCacheFolder);\r\n\r\n    for (const fileName of files) {\r\n      if (/download_(\\w+).zip/.test(fileName) === false) {\r\n        continue;\r\n      }\r\n\r\n      const filePath = path.join(config.tmpFileCacheFolder, fileName);\r\n      const fileStat = fs.statSync(filePath);\r\n\r\n      if (fileStat.ctimeMs >= expire) {\r\n        continue;\r\n      }\r\n\r\n      fs.unlinkSync(filePath);\r\n    }\r\n  }\r\n\r\n  replaceCharInFilename(filename: string) {\r\n    return filename.replace(/[^a-zA-Z0-9 -]/g, '')    // remove special characters\r\n      .replace(/ /g, '-')             // replace space by dashes\r\n      .replace(/-+/g, '-');\r\n  }\r\n\r\n  async calcPackage(pack: IDownload) {\r\n\r\n    let localTotalSize = 0;\r\n    const localTooLargeFiles: Array<String> = [];\r\n\r\n    for (const lec of pack.lectures) {\r\n      for (const unit of lec.units) {\r\n\r\n        const localUnit = await Unit\r\n          .findOne({_id: unit.unitId})\r\n          .orFail(new NotFoundError());\r\n\r\n        if (localUnit.__t === 'file') {\r\n          const fileUnit = <IFileUnit><any>localUnit;\r\n          fileUnit.files.forEach((file, index) => {\r\n            if (unit.files.indexOf(index) > -1) {\r\n              if ((file.size / 1024) > config.maxFileSize) {\r\n                localTooLargeFiles.push(file.link);\r\n              }\r\n              localTotalSize += (file.size / 1024);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return {totalSize: localTotalSize, tooLargeFiles: localTooLargeFiles};\r\n  }\r\n\r\n  /**\r\n   * @api {get} /api/download/:id Request archived file\r\n   * @apiName GetDownload\r\n   * @apiGroup Download\r\n   *\r\n   * @apiParam {String} id Course name.\r\n   * @apiParam {Response} response Response (input).\r\n   *\r\n   * @apiSuccess {Response} response Response (output).\r\n   *\r\n   * @apiSuccessExample {json} Success-Response:\r\n   *     UEsFBgAAAAAAAAAAAAAAAAAAAAAAAA==\r\n   *\r\n   * @apiError NotFoundError File could not be found.\r\n   * @apiError ForbiddenError Invalid id i.e. filename (e.g. '../something').\r\n   */\r\n  @Get('/:id')\r\n  async getArchivedFile(@Param('id') id: string, @Res() response: Response) {\r\n    const tmpFileCacheFolder = path.resolve(config.tmpFileCacheFolder);\r\n    const filePath = path.join(tmpFileCacheFolder, 'download_' + id + '.zip');\r\n\r\n    // Assures that the filePath actually points to a file within the tmpFileCacheFolder.\r\n    // This is because the id parameter could be something like '../forbiddenFile' ('../' via %2E%2E%2F in the URL).\r\n    if (path.dirname(filePath) !== tmpFileCacheFolder) {\r\n      throw new ForbiddenError(errorCodes.file.forbiddenPath.code);\r\n    }\r\n\r\n    if (!fs.existsSync(filePath)) {\r\n      throw new NotFoundError();\r\n    }\r\n\r\n    response.setHeader('Connection', 'keep-alive');\r\n    response.setHeader('Access-Control-Expose-Headers', 'Content-Disposition');\r\n    await promisify<string, void>(response.download.bind(response))(filePath);\r\n    return response;\r\n  }\r\n\r\n  async createFileHash() {\r\n    return crypto.randomBytes(16).toString('hex');\r\n  }\r\n\r\n  /**\r\n   * @api {post} /api/download/pdf/individual Post download request individual PDF\r\n   * @apiName PostDownload\r\n   * @apiGroup Download\r\n   *\r\n   * @apiParam {IDownload} data Course data.\r\n   * @apiParam {IUser} currentUser Currently logged in user.\r\n   *\r\n   * @apiSuccess {String} hash Hash value.\r\n   *\r\n   * @apiSuccessExample {json} Success-Response:\r\n   *     \"da39a3ee5e6b4b0d3255bfef95601890afd80709\"\r\n   *\r\n   * @apiError NotFoundError\r\n   * @apiError ForbiddenError\r\n   * @apiError BadRequestError\r\n   */\r\n  @Post('/pdf/individual')\r\n  @ContentType('application/json')\r\n  async postDownloadRequestPDFIndividual(@Body() data: IDownload, @CurrentUser() user: IUser) {\r\n    if (!data.lectures.length) {\r\n      throw new BadRequestError();\r\n    }\r\n\r\n    const course = await Course\r\n      .findOne({_id: data.courseName})\r\n      .orFail(new NotFoundError());\r\n\r\n    this.userCanExportCourse(course, user);\r\n\r\n    const size = await this.calcPackage(data);\r\n\r\n    if (size.totalSize > config.maxZipSize || size.tooLargeFiles.length !== 0) {\r\n      throw new BadRequestError();\r\n    }\r\n\r\n    const hash = await this.createFileHash();\r\n    const filePath = path.join(path.resolve(config.tmpFileCacheFolder), 'download_' + hash + '.zip');\r\n    const output = fs.createWriteStream(filePath);\r\n\r\n    const archive = archiver('zip', {\r\n      zlib: {level: 9}\r\n    });\r\n\r\n    archive.on('error', (err: Error) => {\r\n      throw err;\r\n    });\r\n\r\n    archive.pipe(output);\r\n\r\n    let lecCounter = 1;\r\n    for (const lec of data.lectures) {\r\n\r\n      const localLecture = await Lecture.findOne({_id: lec.lectureId});\r\n      const lcName = this.replaceCharInFilename(localLecture.name);\r\n      let unitCounter = 1;\r\n\r\n      for (const unit of lec.units) {\r\n        const localUnit = await Unit\r\n          .findOne({_id: unit.unitId})\r\n          .orFail(new NotFoundError());\r\n\r\n        if (localUnit.__t === 'file') {\r\n          for (const fileId of unit.files) {\r\n            const file = await File.findById(fileId);\r\n            archive.file('uploads/' + file.link, {name: lecCounter + '_' + lcName + '/' + unitCounter + '_' + file.name});\r\n          }\r\n        } else {\r\n\r\n          const options: CreateOptions = {\r\n            phantomPath: binPath,\r\n            format: 'A4',\r\n            border: {\r\n              left: '1cm',\r\n              right: '1cm'\r\n            },\r\n            footer: {\r\n              contents: {\r\n                default: '<div id=\"pageFooter\">{{page}}/{{pages}}</div>'\r\n              }\r\n            }\r\n          };\r\n\r\n          let html = '<!DOCTYPE html>\\n' +\r\n            '<html>\\n' +\r\n            '  <head>' +\r\n            '     <style>' +\r\n            '       #pageHeader {text-align: center;border-bottom: 1px solid;padding-bottom: 5px;}' +\r\n            '       #pageFooter {text-align: center;border-top: 1px solid;padding-top: 5px;}' +\r\n            '       html,body {font-family: \\'Helvetica\\', \\'Arial\\', sans-serif; font-size: 12px; line-height: 1.5;}' +\r\n            '       .codeBox {border: 1px solid grey; font-family: Monaco,Menlo,source-code-pro,monospace; padding: 10px}' +\r\n            '       #firstPage {page-break-after: always;}' +\r\n            '       .bottomBoxWrapper {height:800px; position: relative}' +\r\n            '       .bottomBox {position: absolute; bottom: 0;}' + this.markdownCss +\r\n            '     </style>' +\r\n            '  </head>';\r\n          html += await localUnit.toHtmlForIndividualPDF();\r\n          html += '</html>';\r\n          const name = lecCounter + '_' + lcName + '/' + unitCounter + '_' + this.replaceCharInFilename(localUnit.name) + '.pdf';\r\n          const buffer = await this.createPdf(html, options);\r\n          archive.append(buffer, {name});\r\n        }\r\n        unitCounter++;\r\n      }\r\n      lecCounter++;\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      output.on('close', () => resolve(hash));\r\n      archive.finalize();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @api {post} /api/download/pdf/single Post download request single PDF\r\n   * @apiName PostDownload\r\n   * @apiGroup Download\r\n   *\r\n   * @apiParam {IDownload} data Course data.\r\n   * @apiParam {IUser} currentUser Currently logged in user.\r\n   *\r\n   * @apiSuccess {String} hash Hash value.\r\n   *\r\n   * @apiSuccessExample {json} Success-Response:\r\n   *     \"da39a3ee5e6b4b0d3255bfef95601890afd80709\"\r\n   *\r\n   * @apiError NotFoundError\r\n   * @apiError ForbiddenError\r\n   * @apiError BadRequestError\r\n   */\r\n  @Post('/pdf/single')\r\n  @ContentType('application/json')\r\n  async postDownloadRequestPDFSingle(@Body() data: IDownload, @CurrentUser() user: IUser) {\r\n    if (!data.lectures.length) {\r\n      throw new BadRequestError();\r\n    }\r\n\r\n    const course = await Course\r\n      .findOne({_id: data.courseName})\r\n      .orFail(new NotFoundError());\r\n\r\n    this.userCanExportCourse(course, user);\r\n\r\n    const size = await this.calcPackage(data);\r\n\r\n    if (size.totalSize > config.maxZipSize || size.tooLargeFiles.length !== 0) {\r\n      throw new BadRequestError();\r\n    }\r\n\r\n    data.courseName += 'Single';\r\n    const hash = await this.createFileHash();\r\n    const filePath = path.join(path.resolve(config.tmpFileCacheFolder), 'download_' + hash + '.zip');\r\n    const output = fs.createWriteStream(filePath);\r\n\r\n    const archive = archiver('zip', {\r\n      zlib: {level: 9}\r\n    });\r\n\r\n    archive.on('error', (err: Error) => {\r\n      throw err;\r\n    });\r\n\r\n    archive.pipe(output);\r\n\r\n    const options: CreateOptions = {\r\n      phantomPath: binPath,\r\n      format: 'A4',\r\n      border: {\r\n        left: '1cm',\r\n        right: '1cm',\r\n        top: '0',\r\n        bottom: '0'\r\n      },\r\n      footer: {\r\n        contents: {\r\n          default: '<div id=\"pageFooter\">{{page}}/{{pages}}</div>'\r\n        }\r\n      },\r\n      header: {\r\n        contents: '<div id=\"pageHeader\">' + course.name + '</div>',\r\n        height: '20mm'\r\n      }\r\n    };\r\n\r\n    let html = '<!DOCTYPE html>\\n' +\r\n      '<html>\\n' +\r\n      '  <head>' +\r\n      '     <style>' +\r\n      '       #pageHeader {text-align: center;border-bottom: 1px solid;padding-bottom: 5px;}' +\r\n      '       #pageFooter {text-align: center;border-top: 1px solid;padding-top: 5px;}' +\r\n      '       html, body {font-family: \\'Helvetica\\', \\'Arial\\', sans-serif; font-size: 12px; line-height: 1.5;}' +\r\n      '       .codeBox {border: 1px solid grey; font-family: Monaco,Menlo,source-code-pro,monospace; padding: 10px}' +\r\n      '       #firstPage {page-break-after: always;}' +\r\n      '       #nextPage {page-break-before: always;}' +\r\n      '       .bottomBoxWrapper {height:800px; position: relative}' +\r\n      '       .bottomBox {position: absolute; bottom: 0;}' + this.markdownCss +\r\n      '     </style>' +\r\n      '  </head>' +\r\n      '  <body>' +\r\n      '  ';\r\n\r\n    let solutions = '<div id=\"nextPage\"><h2><u>Solutions</u></h2>';\r\n\r\n    let lecCounter = 1;\r\n    let firstSol = false;\r\n    for (const lec of data.lectures) {\r\n\r\n      const localLecture = await Lecture.findOne({_id: lec.lectureId});\r\n      const lcName = this.replaceCharInFilename(localLecture.name);\r\n      let unitCounter = 1;\r\n      let solCounter = 1;\r\n      if (lecCounter > 1) {\r\n        html += '<div id=\"nextPage\" ><h2>Lecture: ' + localLecture.name + '</h2>';\r\n      } else {\r\n        html += '<div><h2>Lecture: ' + localLecture.name + '</h2>';\r\n      }\r\n\r\n      for (const unit of lec.units) {\r\n        const localUnit = await Unit\r\n          .findOne({_id: unit.unitId})\r\n          .orFail(new NotFoundError());\r\n\r\n        if (localUnit.__t === 'file') {\r\n          for (const fileId of unit.files) {\r\n            const file = await File.findById(fileId);\r\n            archive.file(path.join(config.uploadFolder, file.link),\r\n              {name: lecCounter + '_' + lcName + '/' + unitCounter + '_' + file.name});\r\n          }\r\n        } else if ((localUnit.__t === 'code-kata' || localUnit.__t === 'task') && lecCounter > 1 && unitCounter > 1) {\r\n          html += '<div id=\"nextPage\" >' + await localUnit.toHtmlForSinglePDF() + '</div>';\r\n        } else {\r\n          html += await localUnit.toHtmlForSinglePDF();\r\n        }\r\n\r\n        if (localUnit.__t === 'code-kata' || localUnit.__t === 'task') {\r\n\r\n          if (!firstSol && solCounter === 1) {\r\n            solutions += '<div><h2>Lecture: ' + localLecture.name + '</h2>';\r\n            firstSol = true;\r\n          } else if (solCounter === 1) {\r\n            solutions += '<div id=\"nextPage\" ><h2>Lecture: ' + localLecture.name + '</h2>';\r\n          } else {\r\n            solutions += '<div id=\"nextPage\" >';\r\n          }\r\n          solutions += await localUnit.toHtmlForSinglePDFSolutions() + '</div>';\r\n          solCounter++;\r\n        } else if (localUnit.__t !== 'file') {\r\n          solutions += await localUnit.toHtmlForSinglePDFSolutions();\r\n        }\r\n        unitCounter++;\r\n      }\r\n      html += '</div>';\r\n      lecCounter++;\r\n    }\r\n    html += solutions;\r\n    html += '</div></body>' +\r\n      '</html>';\r\n    const name = this.replaceCharInFilename(course.name) + '.pdf';\r\n    const buffer = await this.createPdf(html, options);\r\n    archive.append(buffer, {name});\r\n\r\n    return new Promise((resolve) => {\r\n      output.on('close', () => resolve(hash));\r\n      archive.finalize();\r\n    });\r\n  }\r\n\r\n  private readMarkdownCss() {\r\n    try {\r\n      return fs.readFileSync(path.resolve(__dirname, '../../styles/md/bundle.css'), 'utf8');\r\n    } catch (e) {\r\n      console.error(e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private createPdf(html: string, options: CreateOptions): Promise<Buffer> {\r\n    return new Promise<Buffer>((resolve, reject) => {\r\n      pdf.create(html, options).toBuffer((err: Error, buffer: Buffer) => {\r\n        if (err) {\r\n          reject(err);\r\n        }\r\n        resolve(buffer);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param course\r\n   * @param user\r\n   */\r\n  private userCanExportCourse(course: ICourse, user: IUser): boolean {\r\n    if (user.role === 'admin') {\r\n      return true;\r\n    }\r\n\r\n    if (mongoose.Types.ObjectId(user._id).equals(course.courseAdmin._id)) {\r\n      return true;\r\n    }\r\n\r\n    if (course.students.indexOf(user._id) !== -1) {\r\n      return true;\r\n    }\r\n\r\n    if (course.teachers.indexOf(user._id) !== -1) {\r\n      return true;\r\n    }\r\n\r\n    throw new ForbiddenError();\r\n  }\r\n\r\n  /**\r\n   * @api {delete} /api/download/ Request to clean up the cache.\r\n   * @apiName DeleteCache\r\n   * @apiGroup Download\r\n   * @apiPermission admin\r\n   *\r\n   * @apiSuccess {Object} result Empty object.\r\n   *\r\n   * @apiSuccessExample {json} Success-Response:\r\n   *      {}\r\n   */\r\n  @Delete('/cache')\r\n  @Authorized(['admin'])\r\n  deleteCache() {\r\n    this.cleanupCache();\r\n    return {};\r\n  }\r\n}\r\n"]}