{"version":3,"sources":["src/models/User.ts"],"names":[],"mappings":"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","file":"../../../src/models/User.js","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport * as bcrypt from 'bcrypt';\r\nimport {IUser} from '../../../shared/models/IUser';\r\nimport {IUserSubSafe} from '../../../shared/models/IUserSubSafe';\r\nimport {IUserSubTeacher} from '../../../shared/models/IUserSubTeacher';\r\nimport {IUserSubCourseView} from '../../../shared/models/IUserSubCourseView';\r\nimport {NativeError} from 'mongoose';\r\nimport * as crypto from 'crypto';\r\nimport {isNullOrUndefined} from 'util';\r\nimport {isEmail} from 'validator';\r\nimport {errorCodes} from '../config/errorCodes';\r\nimport {allRoles} from '../config/roles';\r\nimport {extractMongoId} from '../utilities/ExtractMongoId';\r\nimport {ensureMongoToObject} from '../utilities/EnsureMongoToObject';\r\nimport {Course, ICourseModel} from './Course';\r\nimport {NotificationSettings} from './NotificationSettings';\r\nimport {Notification} from './Notification';\r\nimport {WhitelistUser} from './WhitelistUser';\r\nimport {Progress} from './progress/Progress';\r\nimport fs = require('fs');\r\n\r\n\r\nexport interface IUserPrivileges {\r\n  userIsAdmin: boolean;\r\n  userIsTeacher: boolean;\r\n  userIsStudent: boolean;\r\n  userEditLevel: number;\r\n}\r\n\r\nexport interface IUserEditPrivileges extends IUserPrivileges {\r\n  currentEditLevel: number;\r\n  targetEditLevel: number;\r\n  editSelf: boolean;\r\n  editLevelHigher: boolean;\r\n  editAllowed: boolean;\r\n}\r\n\r\ninterface IUserModel extends IUser, mongoose.Document {\r\n  exportPersonalData: () => Promise<IUser>;\r\n  isValidPassword: (candidatePassword: string) => Promise<boolean>;\r\n  checkPrivileges: () => IUserPrivileges;\r\n  checkEditUser: (targetUser: IUser) => IUserEditPrivileges;\r\n  checkEditableBy: (currentUser: IUser) => IUserEditPrivileges;\r\n  forSafe: () => IUserSubSafe;\r\n  forTeacher: () => IUserSubTeacher;\r\n  forCourseView: () => IUserSubCourseView;\r\n  forUser: (otherUser: IUser) => IUserSubSafe | IUserSubTeacher | IUser;\r\n  authenticationToken: string;\r\n  resetPasswordToken: string;\r\n  resetPasswordExpires: Date;\r\n  isActive: boolean;\r\n  updatedAt: Date;\r\n}\r\ninterface IUserMongoose extends mongoose.Model<IUserModel> {\r\n  getEditLevel: (user: IUser) => number;\r\n  getEditLevelUnsafe: (user: any) => number | undefined;\r\n  checkPrivileges: (user: IUser) => IUserPrivileges;\r\n  checkEditUser: (currentUser: IUser, targetUser: IUser) => IUserEditPrivileges;\r\n  forSafe: (user: IUser | IUserModel) => IUserSubSafe;\r\n  forTeacher: (user: IUser | IUserModel) => IUserSubTeacher;\r\n  forCourseView: (user: IUser | IUserModel) => IUserSubCourseView;\r\n  forUser: (user: IUser | IUserModel, otherUser: IUser) => IUserSubSafe | IUserSubTeacher | IUser;\r\n}\r\nlet User: IUserMongoose;\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    uid: {\r\n      type: String,\r\n      lowercase: true,\r\n      unique: true,\r\n      sparse: true,\r\n      index: true\r\n    },\r\n    email: {\r\n      type: String,\r\n      lowercase: true,\r\n      unique: true,\r\n      required: true,\r\n      validate: [{validator: (value: any) => isEmail(value), msg: 'Invalid email.'}],\r\n      index: true\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true,\r\n      validate: new RegExp(errorCodes.password.regex.regex)\r\n    },\r\n    profile: {\r\n      firstName: {\r\n        type: String,\r\n        index: true,\r\n        maxlength: 64\r\n      },\r\n      lastName: {\r\n        type: String,\r\n        index: true,\r\n        maxlength: 64\r\n      },\r\n      picture: {\r\n        path: {type: String},\r\n        name: {type: String},\r\n        alias: {type: String}\r\n      },\r\n      theme: {type: String}\r\n    },\r\n    role: {\r\n      type: String,\r\n      'enum': allRoles,\r\n      'default': 'student'\r\n    },\r\n    lastVisitedCourses: [ {\r\n      type: String\r\n  }],\r\n    authenticationToken: {type: String},\r\n    resetPasswordToken: {type: String},\r\n    resetPasswordExpires: {type: Date},\r\n    isActive: {type: Boolean, 'default': false},\r\n    updatedAt: { type: Date, required: true, default: Date.now }\r\n  },\r\n  {\r\n    timestamps: true,\r\n    toObject: {\r\n      virtuals: true,\r\n      transform: function (doc: any, ret: any) {\r\n        ret._id = ret._id.toString();\r\n        delete ret.password;\r\n      }\r\n    }\r\n  });\r\nuserSchema.index({\r\n  uid: 'text',\r\n  email: 'text',\r\n  'profile.firstName': 'text',\r\n  'profile.lastName': 'text'\r\n}, {name: 'user_combined'});\r\n\r\nfunction hashPassword(next: (err?: NativeError) => void) {\r\n  const user = this, SALT_FACTOR = 5;\r\n\r\n  if (!user.isModified('password')) {\r\n    return next();\r\n  }\r\n\r\n  bcrypt.hash(user.password, SALT_FACTOR)\r\n    .then((hash) => {\r\n      user.password = hash;\r\n    })\r\n    .then(() => next())\r\n    .catch(next);\r\n}\r\n\r\nfunction generateActivationToken(next: (err?: NativeError) => void) {\r\n  // check if user wasn't activated by the creator\r\n  if ( !this.isActive && isNullOrUndefined(this.authenticationToken)) {\r\n    // set new authenticationToken\r\n    this.authenticationToken = generateSecureToken();\r\n  }\r\n\r\n  next();\r\n}\r\n\r\nfunction generatePasswordResetToken(next: (err?: NativeError) => void) {\r\n  // check if passwordReset is requested -> (resetPasswordExpires is set)\r\n  if (!isNullOrUndefined(this.resetPasswordExpires) && isNullOrUndefined(this.resetPasswordToken)) {\r\n    this.resetPasswordToken = generateSecureToken();\r\n  }\r\n\r\n  next();\r\n}\r\n\r\n// returns random 64 byte long base64 encoded Token\r\n// maybe this could be shortened\r\nfunction generateSecureToken() {\r\n  return crypto.randomBytes(64).toString('base64');\r\n}\r\n\r\nfunction removeEmptyUid(next: (err?: NativeError) => void) {\r\n  if (this.uid != null && this.uid.length === 0) {\r\n    this.uid = undefined;\r\n  }\r\n\r\n  next();\r\n}\r\n\r\n// Pre-save of user to database, hash password if password is modified or new\r\nuserSchema.pre('save', hashPassword);\r\nuserSchema.pre('save', generateActivationToken);\r\nuserSchema.pre('save', generatePasswordResetToken);\r\nuserSchema.pre('save', removeEmptyUid);\r\n\r\n// TODO: Move shared code of save and findOneAndUpdate hook to one function\r\nuserSchema.pre('findOneAndUpdate', function (next) {\r\n  const SALT_FACTOR = 5;\r\n  const newPassword = this.getUpdate().password;\r\n  if (typeof newPassword !== 'undefined') {\r\n    bcrypt.hash(newPassword, SALT_FACTOR)\r\n      .then((hash) => {\r\n        this.findOneAndUpdate({}, {password: hash});\r\n      })\r\n      .then(() => next())\r\n      .catch(next);\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\n// delete all user data\r\nuserSchema.pre('remove', async function () {\r\n  const localUser = <IUserModel><any>this;\r\n  try {\r\n    const promises = [];\r\n    // notifications\r\n    promises.push(Notification.deleteMany({user: localUser._id}));\r\n    // notificationsettings\r\n    promises.push(NotificationSettings.deleteMany({user: localUser._id}));\r\n    // whitelists\r\n    promises.push(WhitelistUser.deleteMany({uid: localUser.uid}));\r\n    // remove user form courses\r\n    promises.push(Course.updateMany(\r\n      {$or: [\r\n          {students: localUser._id},\r\n          {teachers: localUser._id}\r\n          ]},\r\n      {$pull: {\r\n            'students': localUser._id,\r\n            'teachers': localUser._id\r\n          }\r\n      }));\r\n    // progress\r\n    promises.push(Progress.deleteMany({user: localUser._id}));\r\n\r\n    // image\r\n    const path = localUser.profile.picture.path;\r\n    if (path && fs.existsSync(path)) {\r\n      fs.unlinkSync(path);\r\n    }\r\n\r\n    await Promise.all(promises);\r\n\r\n  } catch (e) {\r\n    throw new Error('Delete Error: ' + e.toString());\r\n  }\r\n});\r\n\r\n// Method to compare password for login\r\nuserSchema.methods.isValidPassword = function (candidatePassword: string) {\r\n  if (typeof  candidatePassword === 'undefined') {\r\n    candidatePassword = '';\r\n  }\r\n  return bcrypt.compare(candidatePassword, this.password);\r\n};\r\n\r\nuserSchema.methods.checkPrivileges = function (): IUserPrivileges {\r\n  return User.checkPrivileges(this);\r\n};\r\n\r\nuserSchema.methods.checkEditUser = function (targetUser: IUser): IUserEditPrivileges {\r\n  return User.checkEditUser(this, targetUser);\r\n};\r\n\r\nuserSchema.methods.checkEditableBy = function (currentUser: IUser): IUserEditPrivileges {\r\n  return User.checkEditUser(currentUser, this);\r\n};\r\n\r\nuserSchema.methods.forSafe = function (): IUserSubSafe {\r\n  return User.forSafe(this);\r\n};\r\n\r\nuserSchema.methods.forTeacher = function (): IUserSubTeacher {\r\n  return User.forTeacher(this);\r\n};\r\n\r\nuserSchema.methods.forCourseView = function (): IUserSubCourseView {\r\n  return User.forCourseView(this);\r\n};\r\n\r\nuserSchema.methods.forUser = function (otherUser: IUser): IUserSubSafe | IUserSubTeacher | IUser {\r\n  return User.forUser(this, otherUser);\r\n};\r\n\r\nuserSchema.methods.exportPersonalData = async function () {\r\n  await this.populate(\r\n    {\r\n      path: 'lastVisitedCourses',\r\n      model: Course,\r\n      select: 'name description -_id teachers'\r\n    })\r\n    .execPopulate();\r\n\r\n  const lastVisitedCourses = await Promise.all(this.lastVisitedCourses.map( async (course: ICourseModel) => {\r\n    return await course.exportJSON(true, true);\r\n  }));\r\n\r\n  const obj = this.toObject();\r\n\r\n  obj.lastVisitedCourses = lastVisitedCourses;\r\n\r\n  // remove unwanted informations\r\n  // mongo properties\r\n  delete obj._id;\r\n  delete obj.createdAt;\r\n  delete obj.__v;\r\n  delete obj.updatedAt;\r\n  delete obj.id;\r\n\r\n  // custom properties\r\n\r\n  return obj;\r\n};\r\n\r\nuserSchema.methods.getCourses = async function () {\r\n  const localUser = <IUserModel><any>this;\r\n  return Course.find({courseAdmin: localUser._id});\r\n};\r\n\r\n// The idea behind the editLevels is to only allow updates if the currentUser \"has a higher level\" than the target.\r\n// (Or when the currentUser is an admin or targets itself.)\r\nconst editLevels: {[key: string]: number} = {\r\n  student: 0,\r\n  teacher: 0,\r\n  admin: 2,\r\n};\r\n\r\nuserSchema.statics.getEditLevel = function (user: IUser): number {\r\n  return editLevels[user.role];\r\n};\r\n\r\nuserSchema.statics.getEditLevelUnsafe = function (user: any): number | undefined {\r\n  return editLevels[user.role];\r\n};\r\n\r\nuserSchema.statics.checkPrivileges = function (user: IUser): IUserPrivileges {\r\n  const userIsAdmin: boolean = user.role === 'admin';\r\n  const userIsTeacher: boolean = user.role === 'teacher';\r\n  const userIsStudent: boolean = user.role === 'student';\r\n  // NOTE: The 'tutor' role is currently unused / disabled.\r\n  // const userIsTutor: boolean = user.role === 'tutor';\r\n\r\n  const userEditLevel: number = User.getEditLevel(user);\r\n\r\n  return {userIsAdmin, userIsTeacher, userIsStudent, userEditLevel};\r\n};\r\n\r\nuserSchema.statics.checkEditUser = function (currentUser: IUser, targetUser: IUser): IUserEditPrivileges {\r\n  const {userIsAdmin, ...userIs} = User.checkPrivileges(currentUser);\r\n\r\n  const currentEditLevel = User.getEditLevel(currentUser);\r\n  const targetEditLevel = User.getEditLevel(targetUser);\r\n\r\n  const editSelf = extractMongoId(currentUser._id) === extractMongoId(targetUser._id);\r\n  const editLevelHigher = currentEditLevel > targetEditLevel;\r\n\r\n  // Note that editAllowed only means authorization to edit SOME (herein unspecified) properties.\r\n  // If false, it serves as a definite indicator that absolutely NO edit access is to be granted,\r\n  // but if true, it by itself is not enough information to know what exactly is allowed.\r\n  // (I.e. it DOES NOT mean unrestricted editing capabilties.)\r\n  const editAllowed = userIsAdmin || editSelf || editLevelHigher;\r\n\r\n  return {\r\n    userIsAdmin, ...userIs,\r\n    currentEditLevel, targetEditLevel,\r\n    editSelf, editLevelHigher,\r\n    editAllowed\r\n  };\r\n};\r\n\r\nuserSchema.statics.forSafe = function (user: IUser | IUserModel): IUserSubSafe {\r\n  const {\r\n    profile: {firstName, lastName}\r\n  } = user;\r\n  const result: IUserSubSafe = {\r\n    _id: <string>extractMongoId(user._id),\r\n    profile: {firstName, lastName}\r\n  };\r\n  const picture = ensureMongoToObject(user.profile.picture);\r\n  if (Object.keys(picture).length) {\r\n    result.profile.picture = picture;\r\n  }\r\n  return result;\r\n};\r\n\r\nuserSchema.statics.forTeacher = function (user: IUser | IUserModel): IUserSubTeacher {\r\n  const {\r\n    uid, email\r\n  } = user;\r\n  return {\r\n    ...User.forSafe(user),\r\n    uid, email\r\n  };\r\n};\r\n\r\nuserSchema.statics.forCourseView = function (user: IUser | IUserModel): IUserSubCourseView {\r\n  const {\r\n    email\r\n  } = user;\r\n  return {\r\n    ...User.forSafe(user),\r\n    email\r\n  };\r\n};\r\n\r\nuserSchema.statics.forUser = function (user: IUser | IUserModel, otherUser: IUser): IUserSubSafe | IUserSubTeacher | IUser {\r\n  const {userIsTeacher, userIsAdmin} = User.checkPrivileges(otherUser);\r\n  const isSelf = extractMongoId(user._id) === extractMongoId(otherUser._id);\r\n  if (isSelf || userIsAdmin) {\r\n    return ensureMongoToObject(user);\r\n  } else if (userIsTeacher) {\r\n    return User.forTeacher(user);\r\n  } else {\r\n    return User.forSafe(user);\r\n  }\r\n};\r\n\r\nUser = mongoose.model<IUserModel, IUserMongoose>('User', userSchema);\r\n\r\nexport {User, IUserModel};\r\n"]}