{"version":3,"sources":["src/models/Lecture.ts"],"names":[],"mappings":"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","file":"../../../src/models/Lecture.js","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport {ILecture} from '../../../shared/models/ILecture';\r\nimport {IUnitModel, Unit} from './units/Unit';\r\nimport {IUnit} from '../../../shared/models/units/IUnit';\r\nimport {IUser} from '../../../shared/models/IUser';\r\nimport {InternalServerError} from 'routing-controllers';\r\nimport {Course} from './Course';\r\n\r\ninterface ILectureModel extends ILecture, mongoose.Document {\r\n  exportJSON: () => Promise<ILecture>;\r\n  processUnitsFor: (user: IUser) => Promise<this>;\r\n}\r\n\r\nconst lectureSchema = new mongoose.Schema({\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    description: {\r\n      type: String\r\n    },\r\n    units: [\r\n      {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Unit'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    timestamps: true,\r\n    toObject: {\r\n      transform: function (doc: any, ret: any) {\r\n        ret._id = ret._id.toString();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n// Cascade delete\r\nlectureSchema.pre('remove', async function () {\r\n  const localLecture = <ILectureModel><any>this;\r\n  try {\r\n    await Unit.deleteMany({'_id': {$in: localLecture.units}}).exec();\r\n  } catch (err) {\r\n    throw new Error('Delete Error: ' + err.toString());\r\n  }\r\n\r\n});\r\n\r\nlectureSchema.methods.exportJSON = async function () {\r\n  const obj = this.toObject();\r\n\r\n  // remove unwanted informations\r\n  // mongo properties\r\n  delete obj._id;\r\n  delete obj.createdAt;\r\n  delete obj.__v;\r\n  delete obj.updatedAt;\r\n\r\n  // \"populate\" lectures\r\n  const units: Array<mongoose.Types.ObjectId> = obj.units;\r\n  obj.units = [];\r\n\r\n  for (const unitId of units) {\r\n    const unit: IUnitModel = await Unit.findById(unitId);\r\n    if (unit) {\r\n      const unitExport = await unit.exportJSON();\r\n      obj.units.push(unitExport);\r\n    }\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nlectureSchema.methods.processUnitsFor = async function (user: IUser) {\r\n  this.units = await Promise.all(this.units.map(async (unit: IUnitModel) => {\r\n    unit = await unit.populateUnit();\r\n    return unit.secureData(user);\r\n  }));\r\n  return this;\r\n};\r\n\r\nlectureSchema.statics.importJSON = async function (lecture: ILecture, courseId: string) {\r\n  // importTest lectures\r\n  const units: Array<IUnit> = lecture.units;\r\n  lecture.units = [];\r\n\r\n  try {\r\n    // Need to disabled this rule because we can't export 'Lecture' BEFORE this function-declaration\r\n    // tslint:disable:no-use-before-declare\r\n    const savedLecture = await new Lecture(lecture).save();\r\n\r\n    const course = await Course.findById(courseId);\r\n    course.lectures.push(savedLecture);\r\n    await course.save();\r\n\r\n    for (const unit of units) {\r\n      await Unit.schema.statics.importJSON(unit, courseId, savedLecture._id);\r\n    }\r\n    const newLecture: ILectureModel = await Lecture.findById(savedLecture._id);\r\n\r\n    return newLecture.toObject();\r\n    // tslint:enable:no-use-before-declare\r\n  } catch (err) {\r\n    const newError = new InternalServerError('Failed to import lecture');\r\n    newError.stack += '\\nCaused by: ' + err.message + '\\n' + err.stack;\r\n    throw newError;\r\n  }\r\n};\r\n\r\n\r\nconst Lecture = mongoose.model<ILectureModel>('Lecture', lectureSchema);\r\n\r\nexport {Lecture, ILectureModel};\r\n"]}