{"version":3,"sources":["src/models/units/FileUnit.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qCAAqC;AAGrC,kCAA6B;AAO7B,MAAM,cAAc,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACzC,KAAK,EAAE;QACL;YACE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,GAAG,EAAE,MAAM;SACZ;KACF;IACD,YAAY,EAAE;QACZ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;CACF,CAAC,CAAC;AASK,wCAAc;AAPtB,cAAc,CAAC,OAAO,CAAC,YAAY,GAAG;;QACpC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,MAAM,WAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1D;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,CAAC;IAC/C,CAAC;CAAA,CAAC","file":"../../../../src/models/units/FileUnit.js","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport {IUnitModel} from './Unit';\r\nimport {IFileUnit} from '../../../../shared/models/units/IFileUnit';\r\nimport {User} from '../User';\r\n\r\ninterface IFileUnitModel extends IFileUnit, IUnitModel {\r\n  populateUnit: () => Promise<IFileUnitModel>;\r\n  toFile: () => String;\r\n}\r\n\r\nconst fileUnitSchema = new mongoose.Schema({\r\n  files: [\r\n    {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: 'File'\r\n    }\r\n  ],\r\n  fileUnitType: {\r\n    type: String,\r\n    required: true\r\n  }\r\n});\r\n\r\nfileUnitSchema.methods.populateUnit = async function() {\r\n  if (this.unitCreator) {\r\n    this.unitCreator = await User.findById(this.unitCreator);\r\n  }\r\n  return this.populate('files').execPopulate();\r\n};\r\n\r\nexport {fileUnitSchema, IFileUnitModel};\r\n"]}