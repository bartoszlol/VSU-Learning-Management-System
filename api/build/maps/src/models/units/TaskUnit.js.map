{"version":3,"sources":["src/models/units/TaskUnit.ts"],"names":[],"mappings":"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","file":"../../../../src/models/units/TaskUnit.js","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport {IUnitModel} from './Unit';\r\nimport {ITaskUnit} from '../../../../shared/models/units/ITaskUnit';\r\nimport {IUser} from '../../../../shared/models/IUser';\r\nimport {IProgress} from '../../../../shared/models/progress/IProgress';\r\nimport {ITaskUnitProgress} from '../../../../shared/models/progress/ITaskUnitProgress';\r\nimport {ITask} from '../../../../shared/models/task/ITask';\r\nconst MarkdownIt = require('markdown-it');\r\n\r\ninterface ITaskUnitModel extends ITaskUnit, IUnitModel {\r\n  exportJSON: () => Promise<ITaskUnit>;\r\n  calculateProgress: (users: IUser[], progress: IProgress[]) => Promise<ITaskUnit>;\r\n}\r\n\r\nconst taskSchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String\r\n    },\r\n    unitId: {\r\n      type: String\r\n    }\r\n    ,\r\n    answers: {\r\n      type: [{\r\n        value: Boolean,\r\n        text: String\r\n      }],\r\n      required: true\r\n    },\r\n  }, {\r\n    timestamps: true,\r\n    toObject: {\r\n      transform: function (doc: any, ret: any) {\r\n        if (ret.hasOwnProperty('_id') && ret._id !== null) {\r\n          ret._id =  ret._id.toString();\r\n        }\r\n\r\n        if (ret.hasOwnProperty('id') && ret.id !== null) {\r\n          ret.id = ret.id.toString();\r\n        }\r\n        ret.answers = ret.answers.map((answer: any) => {\r\n          answer._id = answer._id.toString();\r\n          return answer;\r\n        });\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst taskUnitSchema = new mongoose.Schema({\r\n  tasks: [taskSchema],\r\n  deadline: {\r\n    type: String\r\n  },\r\n});\r\n\r\ntaskUnitSchema.methods.calculateProgress = async function (users: IUser[], progress: IProgress[]): Promise<ITaskUnit> {\r\n  const unitObj = this.toObject();\r\n  const progressStats: any[] = [];\r\n\r\n  unitObj.tasks.forEach((question: ITask) => {\r\n    const questionStats = {\r\n      name: question.name,\r\n      series: [{\r\n        name: 'correct',\r\n        value: 0\r\n      },\r\n      {\r\n        name: 'wrong',\r\n        value: 0\r\n      },\r\n      {\r\n        name: 'no data',\r\n        value: users.length\r\n      }]\r\n    };\r\n    progress.forEach((userProgress: ITaskUnitProgress) => {\r\n      let correctedAnswered = true;\r\n      question.answers.forEach((answer) => {\r\n        if (\r\n          !userProgress.answers[question._id.toString()] ||\r\n          userProgress.answers[question._id.toString()][answer._id.toString()] !== !!answer.value\r\n        ) {\r\n          correctedAnswered = false;\r\n        }\r\n      });\r\n\r\n      if (correctedAnswered) {\r\n        questionStats.series[0].value++;\r\n      } else {\r\n        questionStats.series[1].value++;\r\n      }\r\n\r\n      questionStats.series[2].value--;\r\n    });\r\n\r\n    progressStats.push(questionStats);\r\n  });\r\n\r\n  unitObj.progressData = progressStats;\r\n  return unitObj;\r\n};\r\n\r\ntaskUnitSchema.methods.toHtmlForIndividualPDF = function (): String {\r\n  const md = new MarkdownIt({html: true});\r\n  let html = '<div id=\"pageHeader\" >'\r\n    + md.render(this.name ? this.name : '')  + md.render(this.description ? this.description : '') + '</div>';\r\n\r\n  let counter = 1;\r\n  html += '<div id=\"firstPage\">';\r\n  for (const task of this.tasks) {\r\n     html += '<div><h5>' +  task.name ? md.render(counter + '. ' + task.name) : '' + '</h5></div>';\r\n     counter++;\r\n    for (const answer of task.answers) {\r\n      html += '<div>' + answer.text ?  md.render('<input type=\"checkbox\" style=\"margin-right: 10px\">' + answer.text) : '' + '</div>';\r\n    }\r\n  }\r\n  html += '</div><div><h2>Solution</h2></div>';\r\n  counter = 1;\r\n  for (const task of this.tasks) {\r\n    html += '<div><h5>' +  task.name ? md.render(counter + '. ' + task.name) : '' + '</h5></div>';\r\n    counter++;\r\n    for (const answer of task.answers) {\r\n      let checked = '';\r\n      if (answer.value === true) {\r\n        checked = 'checked';\r\n      }\r\n      html += '<div>' + answer.text ? md.render('<input type=\"checkbox\" style=\"margin-right: 10px;\" ' + checked + '>' + answer.text) : ''\r\n        + '</div>';\r\n    }\r\n  }\r\n\r\n  return html;\r\n};\r\n\r\ntaskUnitSchema.methods.toHtmlForSinglePDF = function (): String {\r\n  const md = new MarkdownIt({html: true});\r\n  let html = '';\r\n  html += '<div><h4>' + md.render(this.name ? 'Unit: ' + this.name : '') + '</h4>'\r\n    + '<span>' + md.render(this.description ? 'Description: ' + this.description : '') + '</span></div>';\r\n\r\n  let counter = 1;\r\n  for (const task of this.tasks) {\r\n    html += '<div><h5>' +  task.name ? md.render(counter + '. ' + task.name) : '' + '</h5></div>';\r\n    counter++;\r\n    for (const answer of task.answers) {\r\n      html += '<div>' + answer.text ?  md.render('<input type=\"checkbox\" style=\"margin-right: 10px\">' + answer.text) : '' + '</div>';\r\n    }\r\n  }\r\n\r\n\r\n  return html;\r\n};\r\n\r\ntaskUnitSchema.methods.toHtmlForSinglePDFSolutions = function (): String {\r\n  const md = new MarkdownIt({html: true});\r\n  let html = '';\r\n  html += '<div><h4>' + md.render(this.name ? 'Unit: ' + this.name : '') + '</h4></div>';\r\n  let counter = 1;\r\n  for (const task of this.tasks) {\r\n    html += '<div><h5>' + task.name ? md.render(counter + '. ' + task.name) : '' + '</h5></div>';\r\n    counter++;\r\n    for (const answer of task.answers) {\r\n      let checked = '';\r\n      if (answer.value === true) {\r\n        checked = 'checked';\r\n      }\r\n      html += '<div>' + answer.text ? md.render('<input type=\"checkbox\" style=\"margin-right: 10px;\" ' + checked + '>' + answer.text) : ''\r\n        + '</div>';\r\n    }\r\n  }\r\n\r\n  return html;\r\n};\r\n\r\nexport {taskUnitSchema, ITaskUnitModel};\r\n"]}