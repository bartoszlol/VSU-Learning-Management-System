{"version":3,"sources":["src/ChatServer.ts"],"names":[],"mappings":"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","file":"../../src/ChatServer.js","sourcesContent":["import * as socketIo from 'socket.io';\r\nimport {SocketIOEvent} from './models/SocketIOEvent';\r\nimport {IMessageModel, Message} from './models/Message';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport * as cookie from 'cookie';\r\nimport config from './config/main';\r\nimport {errorCodes} from './config/errorCodes';\r\nimport {User, IUserModel} from './models/User';\r\nimport {ChatRoom} from './models/ChatRoom';\r\nimport {SocketIOMessageType} from './models/SocketIOMessage';\r\nimport {IMessage} from '../../shared/models/messaging/IMessage';\r\nimport {ISocketIOMessagePost, ISocketIOMessage} from '../../shared/models/messaging/ISocketIOMessage';\r\nimport {BadRequestError, UnauthorizedError, ForbiddenError} from 'routing-controllers';\r\nimport {extractMongoId} from './utilities/ExtractMongoId';\r\nimport * as Raven from 'raven';\r\n\r\nexport default class ChatServer {\r\n\r\n  private io: socketIo.Server;\r\n\r\n  constructor(server: any) {\r\n    this.io = socketIo(server, {path: '/chat'});\r\n\r\n    this.io.use((socket: any, next) => {\r\n      // ATM this and the passportJwtStrategyFactory are the only users of the 'cookie' package.\r\n      const token = cookie.parse(socket.handshake.headers.cookie).token;\r\n      const roomId = socket.handshake.query.room;\r\n\r\n      jwt.verify(token, config.secret, async (err: any, decoded: any) => {\r\n        const [user, room] = await Promise.all([\r\n          User.findById(decoded._id).exec(),\r\n          ChatRoom.findById(roomId).exec()\r\n        ]);\r\n\r\n        if (err || !user || !room) {\r\n          next(new UnauthorizedError());\r\n          return;\r\n        }\r\n\r\n        const privileges = await room.checkPrivileges(user);\r\n        if (!(privileges.userCanViewMessages && privileges.userCanPostMessages)) {\r\n          next(new ForbiddenError());\r\n          return;\r\n        }\r\n\r\n        socket.chatName = await this.obtainChatName(user, roomId);\r\n        socket.userId = decoded._id;\r\n        next();\r\n      });\r\n    });\r\n  }\r\n\r\n  async obtainChatName (user: IUserModel, roomId: string) {\r\n    const lastMessage = await Message.findOne({room: roomId, author: user}).sort({createdAt: -1});\r\n    if (lastMessage) {\r\n      return lastMessage.chatName;\r\n    } else {\r\n      // Note: We probably should improve the random name generation, especially for better readability.\r\n      return user.role + Date.now();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.io.on(SocketIOEvent.CONNECT, (socket: any) => {\r\n      const userId = socket.userId;\r\n      const roomId = socket.handshake.query.room;\r\n      const chatName = socket.chatName;\r\n      socket.join(roomId);\r\n      socket.on(SocketIOEvent.MESSAGE, (message: ISocketIOMessagePost) => this.onMessage(message, userId, roomId, chatName));\r\n    });\r\n  }\r\n\r\n  async onMessage(socketIOMessagePost: ISocketIOMessagePost, userId: string, roomId: string, chatName: string) {\r\n    const message: IMessage = {\r\n      _id: undefined,\r\n      content: socketIOMessagePost.content,\r\n      author: userId,\r\n      room: roomId,\r\n      chatName,\r\n      comments: []\r\n    };\r\n    const socketIOMessage: ISocketIOMessage = {\r\n      meta: socketIOMessagePost.meta,\r\n      message\r\n    };\r\n\r\n    if (socketIOMessagePost.meta.type === SocketIOMessageType.COMMENT) {\r\n      let foundMessage: IMessageModel = await Message.findById(socketIOMessagePost.meta.parent);\r\n      if (!foundMessage) {\r\n        process.stdout.write(errorCodes.chat.parentNotFound.text);\r\n        Raven.captureException(new BadRequestError(errorCodes.chat.parentNotFound.code));\r\n        return;\r\n      }\r\n      if (extractMongoId(foundMessage.room) !== roomId) {\r\n        process.stdout.write(errorCodes.chat.badParent.text);\r\n        Raven.captureException(new BadRequestError(errorCodes.chat.badParent.code));\r\n        return;\r\n      }\r\n      foundMessage.comments.push(message);\r\n      foundMessage = await foundMessage.save();\r\n      socketIOMessage.message = (<IMessageModel>foundMessage.comments.pop()).forDisplay();\r\n      this.io.in(roomId).emit(SocketIOEvent.MESSAGE, socketIOMessage);\r\n    } else {\r\n      let newMessage = new Message(message);\r\n      newMessage = await newMessage.save();\r\n      socketIOMessage.message = newMessage.forDisplay();\r\n      this.io.in(roomId).emit(SocketIOEvent.MESSAGE, socketIOMessage);\r\n    }\r\n  }\r\n}\r\n"]}