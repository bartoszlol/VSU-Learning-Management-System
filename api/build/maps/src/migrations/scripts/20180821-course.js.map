{"version":3,"sources":["src/migrations/scripts/20180821-course.ts"],"names":[],"mappings":";;;;;;;;;AAAA,4BAA4B;AAC5B,qCAAqC;AACrC,gDAAyD;AACzD,oDAA+D;AAG/D,MAAM,iBAAiB;IAEf,EAAE;;YACN,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;YACvD,IAAI;gBACF,MAAM,UAAU,GAAmB,MAAM,eAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,CAAC,EAAC,WAAW,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,EAAC,EAAE,EAAC,WAAW,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC;gBAC1H,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAO,MAAoB,EAAE,EAAE;oBAC9D,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACpC,MAAM,WAAW,GAAmB,MAAM,mBAAQ,CAAC,MAAM,CAAC;wBACxD,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,wCAAwC,GAAG,MAAM,CAAC,IAAI;wBACnE,IAAI,EAAE;4BACJ,QAAQ,EAAE,QAAQ;4BAClB,OAAO,EAAE,MAAM,CAAC,GAAG;yBACpB;qBACF,CAAC,CAAC;oBAEH,SAAS,CAAC,SAAS,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBAExC,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;oBAEvD,OAAO,MAAM,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC;yBACnD,iBAAiB,CAAC,EAAC,KAAK,EAAE,SAAS,CAAC,GAAG,EAAC,EAAE,SAAS,CAAC,CAAC;gBAC1D,CAAC,CAAA,CAAC,CAAC,CAAC;aACL;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;aAC5B;YAED,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;YAC7D,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;CAEF;AAED,iBAAS,iBAAiB,CAAC","file":"../../../../src/migrations/scripts/20180821-course.js","sourcesContent":["// tslint:disable:no-console\r\nimport * as mongoose from 'mongoose';\r\nimport {Course, ICourseModel} from '../../models/Course';\r\nimport {ChatRoom, IChatRoomModel} from '../../models/ChatRoom';\r\n\r\n\r\nclass CourseV2Migration {\r\n\r\n  async up() {\r\n    console.log('Course Chatroom Migration up was called');\r\n    try {\r\n      const oldCourses: ICourseModel[] = await Course.find({$or: [{'chatRooms': {$exists: false}}, {'chatRooms': {$size: 0}}]});\r\n      await Promise.all(oldCourses.map(async (course: ICourseModel) => {\r\n        const courseObj = course.toObject();\r\n        const newChatRoom: IChatRoomModel = await ChatRoom.create({\r\n          name: 'General',\r\n          description: 'This is a general chat for the course ' + course.name,\r\n          room: {\r\n            roomType: 'Course',\r\n            roomFor: course._id\r\n          }\r\n        });\r\n\r\n        courseObj.chatRooms = [newChatRoom._id];\r\n\r\n        courseObj._id = mongoose.Types.ObjectId(courseObj._id);\r\n\r\n        return await mongoose.connection.collection('courses')\r\n          .findOneAndReplace({'_id': courseObj._id}, courseObj);\r\n      }));\r\n    } catch (error) {\r\n      console.log('1: ' + error);\r\n    }\r\n\r\n    console.log('Course Chatrooms have been added sucessfully!');\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport = CourseV2Migration;\r\n"]}