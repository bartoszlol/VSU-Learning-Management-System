{"version":3,"sources":["src/utilities/Pick.ts"],"names":[],"mappings":";;AAEA,SAAS,IAAI,CAAC,IAAmB,EAAE,IAAiB,EAAE,KAAkB,EAAE;IACxE,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACtB,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;KACrB;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAAS,OAAO,CAAC,IAAmB,EAAE,IAAiB,EAAE,KAAkB,EAAE;IAC3E,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACd;aAAM,IAAI,KAAK,YAAY,MAAM,EAAE;YAClC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACd;KACF;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,kBAAe,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC","file":"../../../src/utilities/Pick.js","sourcesContent":["import {IProperties} from '../../../shared/models/IProperties';\r\n\r\nfunction only(keys: Array<string>, from: IProperties, to: IProperties = {}) {\r\n  for (const key of keys) {\r\n    to[key] = from[key];\r\n  }\r\n  return to;\r\n}\r\n\r\nfunction asEmpty(keys: Array<string>, from: IProperties, to: IProperties = {}) {\r\n  for (const key of keys) {\r\n    const value = from[key];\r\n    if (Array.isArray(value)) {\r\n      to[key] = [];\r\n    } else if (value instanceof Object) {\r\n      to[key] = {};\r\n    }\r\n  }\r\n  return to;\r\n}\r\n\r\nexport default {only, asEmpty};\r\n"]}