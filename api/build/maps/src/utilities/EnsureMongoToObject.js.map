{"version":3,"sources":["src/utilities/EnsureMongoToObject.ts"],"names":[],"mappings":";;AAIA;;;;;GAKG;AACH,SAAgB,mBAAmB,CAAmB,IAAkB,EAAE,OAAiC;IACzG,IAAI,UAAU,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;QAC7D,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;KAC/B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAND,kDAMC","file":"../../../src/utilities/EnsureMongoToObject.js","sourcesContent":["import {DocumentToObjectOptions, Document} from 'mongoose';\r\n\r\ntype Model<T> = T & Document;\r\n\r\n/**\r\n * Either calls the mongoose toObject function and returns the result, or simply returns the input.\r\n *\r\n * @param from A mongoose object with toObject function or any other object already returned by toObject (or similar).\r\n * @param options Optional mongoose toObject options.\r\n */\r\nexport function ensureMongoToObject<T extends Object>(from: T | Model<T>, options?: DocumentToObjectOptions): T {\r\n  if ('toObject' in from && typeof from.toObject === 'function') {\r\n    return from.toObject(options);\r\n  } else {\r\n    return from;\r\n  }\r\n}\r\n"]}