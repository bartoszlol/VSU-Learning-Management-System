{"version":3,"sources":["test/TestHelper.ts"],"names":[],"mappings":"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","file":"../../test/TestHelper.js","sourcesContent":["import {FixtureLoader} from '../fixtures/FixtureLoader';\r\nimport {Server} from '../src/server';\r\nimport {JwtUtils} from '../src/security/JwtUtils';\r\nimport {IUser} from '../../shared/models/IUser';\r\nimport chai = require('chai');\r\nimport chaiHttp = require('chai-http');\r\n\r\nexport class TestHelper {\r\n  public app = new Server().app;\r\n  public fixtureLoader = new FixtureLoader();\r\n  public baseUrl: string;\r\n\r\n  public static commonChaiSetup() {\r\n    chai.use(chaiHttp);\r\n    return chai;\r\n  }\r\n\r\n  constructor (BASE_URL: string) {\r\n    this.baseUrl = BASE_URL;\r\n  }\r\n\r\n  public async resetForNextTest() {\r\n    // Before each test we reset the database by reloading the fixtures\r\n    await this.fixtureLoader.load();\r\n  }\r\n\r\n  public async basicUserGetRequest(user: IUser, url: string, queryOptions?: string | object) {\r\n    return await chai.request(this.app)\r\n      .get(url)\r\n      .query(queryOptions)\r\n      .set('Cookie', `token=${JwtUtils.generateToken(user)}`)\r\n      .catch((err) => err.response);\r\n  }\r\n\r\n  public async basicUserPostRequest(user: IUser, url: string, sendData?: string | object) {\r\n    return await chai.request(this.app)\r\n      .post(url)\r\n      .set('Cookie', `token=${JwtUtils.generateToken(user)}`)\r\n      .send(sendData)\r\n      .catch((err) => err.response);\r\n  }\r\n\r\n  public async basicUserPutRequest(user: IUser, url: string, sendData?: string | object) {\r\n    return await chai.request(this.app)\r\n      .put(url)\r\n      .set('Cookie', `token=${JwtUtils.generateToken(user)}`)\r\n      .send(sendData)\r\n      .catch((err) => err.response);\r\n  }\r\n\r\n  public async basicUserDeleteRequest(user: IUser, url: string) {\r\n    return await chai.request(this.app)\r\n      .del(url)\r\n      .set('Cookie', `token=${JwtUtils.generateToken(user)}`)\r\n      .catch((err) => err.response);\r\n  }\r\n\r\n  public async commonUserGetRequest(user: IUser, urlPostfix: string, queryOptions?: string | object) {\r\n    return await this.basicUserGetRequest(user, this.baseUrl + urlPostfix, queryOptions);\r\n  }\r\n\r\n  public async commonUserPostRequest(user: IUser, urlPostfix: string, sendData?: string | object) {\r\n    return await this.basicUserPostRequest(user, this.baseUrl + urlPostfix, sendData);\r\n  }\r\n\r\n  public async commonUserPutRequest(user: IUser, urlPostfix: string, sendData?: string | object) {\r\n    return await this.basicUserPutRequest(user, this.baseUrl + urlPostfix, sendData);\r\n  }\r\n\r\n  public async commonUserDeleteRequest(user: IUser, urlPostfix: string) {\r\n    return await this.basicUserDeleteRequest(user, this.baseUrl + urlPostfix);\r\n  }\r\n}\r\n"]}