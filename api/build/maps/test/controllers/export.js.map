{"version":3,"sources":["test/controllers/export.ts"],"names":[],"mappings":"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","file":"../../../test/controllers/export.js","sourcesContent":["import * as chai from 'chai';\r\nimport chaiHttp = require('chai-http');\r\nimport {TestHelper} from '../TestHelper';\r\nimport {FixtureUtils} from '../../fixtures/FixtureUtils';\r\nimport {Course} from '../../src/models/Course';\r\nimport {ICourse} from '../../../shared/models/ICourse';\r\nimport {User} from '../../src/models/User';\r\nimport {Lecture} from '../../src/models/Lecture';\r\nimport {ILecture} from '../../../shared/models/ILecture';\r\nimport {IUnit} from '../../../shared/models/units/IUnit';\r\nimport {Unit} from '../../src/models/units/Unit';\r\nimport {IFreeTextUnit} from '../../../shared/models/units/IFreeTextUnit';\r\nimport {IFreeTextUnitModel} from '../../src/models/units/FreeTextUnit';\r\nimport {ICodeKataModel} from '../../src/models/units/CodeKataUnit';\r\nimport {ICodeKataUnit} from '../../../shared/models/units/ICodeKataUnit';\r\nimport {ITaskUnitModel} from '../../src/models/units/TaskUnit';\r\nimport {ITaskUnit} from '../../../shared/models/units/ITaskUnit';\r\n\r\nimport {API_NOTIFICATION_TYPE_ALL_CHANGES, NotificationSettings} from '../../src/models/NotificationSettings';\r\nimport {Notification} from '../../src/models/Notification';\r\nimport {WhitelistUser} from '../../src/models/WhitelistUser';\r\n\r\nchai.use(chaiHttp);\r\nconst should = chai.should();\r\nconst expect = chai.expect;\r\nconst BASE_URL = '/api/export';\r\nconst testHelper = new TestHelper(BASE_URL);\r\n\r\n/**\r\n * Provides simple shared setup functionality used by the export access denial unit tests.\r\n *\r\n * @returns A course with at least one unit/lecture and an unauthorizedTeacher (i.e. a teacher that isn't part of the course).\r\n */\r\nasync function exportAccessDenialSetup() {\r\n  const course = await FixtureUtils.getRandomCourseWithAllUnitTypes();\r\n  const unauthorizedTeacher = await FixtureUtils.getUnauthorizedTeacherForCourse(course);\r\n  return {course, unauthorizedTeacher};\r\n}\r\n\r\nasync function testNotFound(what: string) {\r\n  const admin = await FixtureUtils.getRandomAdmin();\r\n  const result = await testHelper.commonUserGetRequest(admin, `/${what}/000000000000000000000000`);\r\n  result.status.should.be.equal(404);\r\n}\r\n\r\ndescribe('Export', async () => {\r\n  beforeEach(async () => {\r\n    await testHelper.resetForNextTest();\r\n  });\r\n\r\n  describe(`GET ${BASE_URL}`, async () => {\r\n    it('should export units', async () => {\r\n      const admin = await FixtureUtils.getRandomAdmin();\r\n      const units = await Unit.find();\r\n      for (const unit of units) {\r\n        let unitJson: IUnit;\r\n        const exportResult = await testHelper.commonUserGetRequest(admin, `/unit/${unit._id}`);\r\n        exportResult.status.should.be.equal(200, 'failed to export ' + unit.name);\r\n        unitJson = exportResult.body;\r\n        should.not.exist(exportResult.body.createdAt);\r\n        should.not.exist(exportResult.body.__v);\r\n        should.not.exist(exportResult.body.updatedAt);\r\n        should.not.exist(unitJson._id);\r\n        // TODO: share this check since it is the same one as in import.ts\r\n        unitJson.name.should.be.equal(unit.name);\r\n        // check nullable fields\r\n        if (unit.description != null) {\r\n          unitJson.description.should.be.equal(unit.description);\r\n        } else {\r\n          should.not.exist(unitJson.description);\r\n        }\r\n        if (unit.weight != null) {\r\n          unitJson.weight.should.be.equal(unit.weight);\r\n        } else {\r\n          should.not.exist(unitJson.weight);\r\n        }\r\n\r\n        // 'progressableUnits' do have some additional fields\r\n        if (unit.progressable === true) {\r\n          unitJson.progressable.should.be.equal(unit.progressable);\r\n          const progressableUnit = <any>unit;\r\n          if (progressableUnit.deadline != null) {\r\n            (<any>unitJson).deadline.should.be.equal(progressableUnit.deadline);\r\n          }\r\n        }\r\n\r\n        // TODO: Do not use any cast\r\n        (<any>unitJson).__t.should.be.equal((<any>unit).__t);\r\n        // check different types\r\n        switch ((<any>unit).__t) {\r\n          case 'free-text':\r\n            const freeTextUnit = <IFreeTextUnitModel>unit;\r\n            (<IFreeTextUnit>unitJson).markdown.should.be.equal(freeTextUnit.markdown);\r\n            break;\r\n          case 'code-kata':\r\n            const codeKataUnit = <ICodeKataModel>unit;\r\n            (<ICodeKataUnit>unitJson).definition.should.be.equal(codeKataUnit.definition);\r\n            (<ICodeKataUnit>unitJson).code.should.be.equal(codeKataUnit.code);\r\n            (<ICodeKataUnit>unitJson).test.should.be.equal(codeKataUnit.test);\r\n            break;\r\n          case 'task':\r\n            const taskUnit = <ITaskUnitModel>unit;\r\n            (<ITaskUnit>unitJson).tasks.should.be.instanceOf(Array).and.have.lengthOf(taskUnit.tasks.length);\r\n            // maybe further test single tasks?\r\n            break;\r\n          default:\r\n            // should this fail the test?\r\n            process.stderr.write('export for \"' + unit.type + '\" is not completly tested');\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    it('should export lectures', async () => {\r\n      const admin = await FixtureUtils.getRandomAdmin();\r\n      const lectures = await Lecture.find();\r\n      for (const lecture of lectures) {\r\n        let lectureJson: ILecture;\r\n        const exportResult = await testHelper.commonUserGetRequest(admin, `/lecture/${lecture._id}`);\r\n        exportResult.status.should.be.equal(200, 'failed to export ' + lecture.name);\r\n        lectureJson = exportResult.body;\r\n        should.not.exist(exportResult.body.createdAt);\r\n        should.not.exist(exportResult.body.__v);\r\n        should.not.exist(exportResult.body.updatedAt);\r\n        should.not.exist(lectureJson._id);\r\n        lectureJson.name.should.be.equal(lecture.name);\r\n        lectureJson.description.should.be.equal(lecture.description);\r\n        lectureJson.units.should.be.instanceOf(Array).and.have.lengthOf(lecture.units.length);\r\n      }\r\n    });\r\n\r\n    it('should export courses', async () => {\r\n      const courses = await Course.find();\r\n      for (const course of courses) {\r\n        const teacher = await User.findById(course.courseAdmin);\r\n\r\n        let courseJson: ICourse;\r\n        const exportResult = await testHelper.commonUserGetRequest(teacher, `/course/${course._id}`);\r\n        exportResult.status.should.be.equal(200, 'failed to export ' + course.name);\r\n        courseJson = exportResult.body;\r\n        should.not.exist(exportResult.body.createdAt);\r\n        should.not.exist(exportResult.body.__v);\r\n        should.not.exist(exportResult.body.updatedAt);\r\n        should.not.exist(courseJson._id);\r\n        should.not.exist(courseJson.courseAdmin);\r\n        should.not.exist(courseJson.teachers);\r\n        should.not.exist(courseJson.students);\r\n        should.not.exist(courseJson.whitelist);\r\n        courseJson.name.should.be.equal(course.name);\r\n        courseJson.description.should.be.equal(course.description);\r\n        courseJson.lectures.should.be.instanceOf(Array).and.have.lengthOf(course.lectures.length);\r\n      }\r\n    });\r\n\r\n    it('should forbid unit export for an unauthorized teacher', async () => {\r\n      const {course, unauthorizedTeacher} = await exportAccessDenialSetup();\r\n      const unit = await FixtureUtils.getRandomUnitFromCourse(course);\r\n      const result = await testHelper.commonUserGetRequest(unauthorizedTeacher, `/unit/${unit._id}`);\r\n      result.status.should.be.equal(403);\r\n    });\r\n\r\n    it('should forbid lecture export for an unauthorized teacher', async () => {\r\n      const {course, unauthorizedTeacher} = await exportAccessDenialSetup();\r\n      const lecture = await FixtureUtils.getRandomLectureFromCourse(course);\r\n      const result = await testHelper.commonUserGetRequest(unauthorizedTeacher, `/lecture/${lecture._id}`);\r\n      result.status.should.be.equal(403);\r\n    });\r\n\r\n    it('should forbid course export for an unauthorized teacher', async () => {\r\n      const {course, unauthorizedTeacher} = await exportAccessDenialSetup();\r\n      const result = await testHelper.commonUserGetRequest(unauthorizedTeacher, `/course/${course._id}`);\r\n      result.status.should.be.equal(403);\r\n    });\r\n\r\n    it('should respond with 404 for a unit id that doesn\\'t exist', async () => await testNotFound('unit'));\r\n    it('should respond with 404 for a lecture id that doesn\\'t exist', async () => await testNotFound('lecture'));\r\n    it('should respond with 404 for a course id that doesn\\'t exist', async () => await testNotFound('course'));\r\n  });\r\n\r\n  describe(`GET ${BASE_URL}/user`, async () => {\r\n    it('should export student data', async () => {\r\n      const course1 = await FixtureUtils.getRandomCourse();\r\n      const course2 = await FixtureUtils.getRandomCourse();\r\n      const taskUnit = <ITaskUnitModel>await Unit.findOne({progressable: true, __t: 'task'});\r\n      const lecture = await Lecture.findOne({units: { $in: [ taskUnit._id ] }});\r\n      const course = await Course.findOne({lectures: { $in: [ lecture._id ] }});\r\n      const student = await User.findOne({_id: { $in: course.students}});\r\n\r\n      await new NotificationSettings({\r\n        'user': student, 'course': course1,\r\n        'notificationType': API_NOTIFICATION_TYPE_ALL_CHANGES, 'emailNotification': false\r\n      }).save();\r\n\r\n      await new NotificationSettings({\r\n        'user': student, 'course': course2,\r\n        'notificationType': API_NOTIFICATION_TYPE_ALL_CHANGES, 'emailNotification': false\r\n      }).save();\r\n\r\n      await new Notification({\r\n        user: student,\r\n        changedCourse: course1,\r\n        text: 'blubba blubba'\r\n      }).save();\r\n\r\n      await new Notification({\r\n        user: student,\r\n        changedCourse: course2,\r\n        text: 'blubba blubba'\r\n      }).save();\r\n\r\n      await new WhitelistUser({\r\n        firstName: student.profile.firstName,\r\n        lastName: student.profile.lastName,\r\n        uid: student.uid,\r\n        courseId: course1._id\r\n      }).save();\r\n\r\n      const result = await testHelper.commonUserGetRequest(student, `/user`);\r\n      expect(result).to.have.status(200);\r\n    });\r\n\r\n    it('should export teacher data', async () => {\r\n      const teacher = await FixtureUtils.getRandomTeacher();\r\n      const result = await testHelper.commonUserGetRequest(teacher, `/user`);\r\n      expect(result).to.have.status(200);\r\n    });\r\n\r\n    it('should export admin data', async () => {\r\n      const admin = await FixtureUtils.getRandomAdmin();\r\n      const result = await testHelper.commonUserGetRequest(admin, `/user`);\r\n      expect(result).to.have.status(200);\r\n    });\r\n  });\r\n});\r\n"]}