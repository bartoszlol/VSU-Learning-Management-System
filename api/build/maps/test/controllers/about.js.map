{"version":3,"sources":["test/controllers/about.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6CAAwC;AACxC,gEAA2D;AAC3D,yBAAyB;AACzB,6BAA8B;AAC9B,sCAAuC;AAEvC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACnB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,MAAM,GAAG,GAAG,IAAI,eAAM,EAAE,CAAC,GAAG,CAAC;AAC7B,MAAM,QAAQ,GAAG,YAAY,CAAC;AAC9B,MAAM,aAAa,GAAG,IAAI,6BAAa,EAAE,CAAC;AAE1C,QAAQ,CAAC,OAAO,EAAE,GAAS,EAAE;IAC3B,yCAAyC;IACzC,UAAU,CAAC,GAAS,EAAE;QACpB,MAAM,aAAa,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC,CAAA,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,QAAQ,eAAe,EAAE,GAAS,EAAE;QAClD,EAAE,CAAC,sBAAsB,EAAE,GAAS,EAAE;YACpC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;iBACnC,GAAG,CAAC,GAAG,QAAQ,eAAe,CAAC;iBAC/B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEhC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC/C,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAS,EAAE;YAC5D,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,EAAE,uBAAuB,CAAC,CAAC;YAElE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;iBACnC,GAAG,CAAC,GAAG,QAAQ,eAAe,CAAC;iBAC/B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEnC,MAAM,EAAE,CAAC,UAAU,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,CAAC;QACpE,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAA,CAAC,CAAC","file":"../../../test/controllers/about.js","sourcesContent":["import {Server} from '../../src/server';\r\nimport {FixtureLoader} from '../../fixtures/FixtureLoader';\r\nimport * as fs from 'fs';\r\nimport chai = require('chai');\r\nimport chaiHttp = require('chai-http');\r\n\r\nchai.use(chaiHttp);\r\nconst expect = chai.expect;\r\n\r\nconst app = new Server().app;\r\nconst BASE_URL = '/api/about';\r\nconst fixtureLoader = new FixtureLoader();\r\n\r\ndescribe('About', async () => {\r\n  // Before each test we reset the database\r\n  beforeEach(async () => {\r\n    await fixtureLoader.load();\r\n  });\r\n\r\n  describe(`GET ${BASE_URL}/dependencies`, async () => {\r\n    it('should return a json', async () => {\r\n      const result = await chai.request(app)\r\n        .get(`${BASE_URL}/dependencies`)\r\n        .catch((err) => err.response);\r\n\r\n      expect(result).to.have.status(200);\r\n      expect(result).to.be.json;\r\n      expect(result.body).to.have.property('data');\r\n    });\r\n\r\n    it('should fail when license file does not exist', async () => {\r\n      await fs.renameSync('nlf-licenses.json', 'nlf-licenses.json.tmp');\r\n\r\n      const result = await chai.request(app)\r\n        .get(`${BASE_URL}/dependencies`)\r\n        .catch((err) => err.response);\r\n      expect(result).to.have.status(500);\r\n\r\n      await fs.renameSync('nlf-licenses.json.tmp', 'nlf-licenses.json');\r\n    });\r\n  });\r\n});\r\n"]}