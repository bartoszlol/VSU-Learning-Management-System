{"version":3,"sources":["test/integration/unit/fileUnit.ts"],"names":[],"mappings":";;;;;;;;;;AACA,6BAA6B;AAC7B,sCAAuC;AAEvC,gDAA2C;AAC3C,mEAA8D;AAI9D,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACnB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAC7B,MAAM,GAAG,GAAG,IAAI,eAAM,EAAE,CAAC,GAAG,CAAC;AAC7B,MAAM,QAAQ,GAAG,YAAY,CAAC;AAC9B,MAAM,aAAa,GAAG,IAAI,6BAAa,EAAE,CAAC;AAE1C,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,yCAAyC;IACzC,UAAU,CAAC,GAAS,EAAE;QACpB,MAAM,aAAa,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC,CAAA,CAAC,CAAC;IAEH,2BAA2B;IAC3B,uCAAuC;IACvC,0EAA0E;IAC1E,2DAA2D;IAC3D,yEAAyE;IAEzE,qBAAqB;IACrB,iBAAiB;IACjB,0CAA0C;IAC1C,+BAA+B;IAC/B,iDAAiD;IACjD,WAAW;IACX,iDAAiD;IACjD,SAAS;IAET,0CAA0C;IAC1C,wBAAwB;IACxB,6CAA6C;IAC7C,+FAA+F;IAC/F,wEAAwE;IAExE,uCAAuC;IACvC,oDAAoD;IACpD,uEAAuE;IACvE,QAAQ;IACR,MAAM;AACR,CAAC,CAAC,CAAC","file":"../../../../test/integration/unit/fileUnit.js","sourcesContent":["import fs = require('fs');\r\nimport * as chai from 'chai';\r\nimport chaiHttp = require('chai-http');\r\nimport {FixtureUtils} from '../../../fixtures/FixtureUtils';\r\nimport {Server} from '../../../src/server';\r\nimport {FixtureLoader} from '../../../fixtures/FixtureLoader';\r\nimport {JwtUtils} from '../../../src/security/JwtUtils';\r\nimport {User} from '../../../src/models/User';\r\n\r\nchai.use(chaiHttp);\r\nconst should = chai.should();\r\nconst app = new Server().app;\r\nconst BASE_URL = '/api/units';\r\nconst fixtureLoader = new FixtureLoader();\r\n\r\ndescribe('FileUnit', () => {\r\n  // Before each test we reset the database\r\n  beforeEach(async () => {\r\n    await fixtureLoader.load();\r\n  });\r\n\r\n  // FIXME: Add working test!\r\n  // describe(`POST ${BASE_URL}`, () => {\r\n  //   it('should upload a video and return the created unit', async () => {\r\n  //     const course = await FixtureUtils.getRandomCourse();\r\n  //     const courseAdmin = await User.findOne({_id: course.courseAdmin});\r\n\r\n  //     const data = {\r\n  //       model: {\r\n  //         _course: course._id.toString(),\r\n  //         name: 'Test Upload',\r\n  //         description: 'This is my test upload.'\r\n  //       },\r\n  //       lectureId: course.lectures[0].toString()\r\n  //     };\r\n\r\n  //     const res = await chai.request(app)\r\n  //       .post(BASE_URL)\r\n  //       .field('data', JSON.stringify(data))\r\n  //       .attach('file', fs.readFileSync('fixtures/binaryData/testvideo.mp4'), 'testvideo.mp4')\r\n  //       .set('Cookie', `token=${JwtUtils.generateToken(courseAdmin)}`);\r\n\r\n  //     res.status.should.be.equal(200);\r\n  //     res.body.name.should.be.equal('Test Upload');\r\n  //     res.body.description.should.be.equal('This is my test upload.');\r\n  //   });\r\n  // });\r\n});\r\n"]}