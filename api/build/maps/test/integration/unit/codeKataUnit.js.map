{"version":3,"sources":["test/integration/unit/codeKataUnit.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA6B;AAC7B,sCAAuC;AACvC,iDAA4C;AAC5C,gDAA2C;AAC3C,mDAA8C;AAC9C,yDAAoD;AACpD,uDAAgE;AAChE,iEAA4D;AAC5D,yDAAoD;AAGpD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACnB,MAAM,GAAG,GAAG,IAAI,eAAM,EAAE,CAAC,GAAG,CAAC;AAC7B,MAAM,QAAQ,GAAG,YAAY,CAAC;AAC9B,MAAM,UAAU,GAAG,IAAI,uBAAU,CAAC,QAAQ,CAAC,CAAC;AAE5C,QAAQ,CAAC,gBAAgB,QAAQ,EAAE,EAAE,GAAG,EAAE;IACxC,MAAM,KAAK,GAAG;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,oBAAoB;QAC1B,WAAW,EAAE,KAAK;QAClB,YAAY,EAAE,IAAI;QAClB,MAAM,EAAE,CAAC;QACT,GAAG,EAAE,WAAW;QAChB,UAAU,EAAE,sFAAsF;YAClG,IAAI;YACJ,gDAAgD;QAChD,IAAI,EAAE,wBAAwB;YAC9B,8BAA8B;QAC9B,IAAI,EAAE,aAAa;YACnB,IAAI;YACJ,yBAAyB;YACzB,qFAAqF;YACrF,IAAI;YACJ,GAAG;KACJ,CAAC;IAEF,UAAU,CAAC,GAAS,EAAE;QACpB,MAAM,UAAU,CAAC,gBAAgB,EAAE,CAAC;IACtC,CAAC,CAAA,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,QAAQ,EAAE,EAAE,GAAG,EAAE;QAC/B,SAAe,aAAa,CAAE,oBAA8B,EAAE,MAAc;;gBAC1E,MAAM,IAAI,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,WAAW,EAAC,CAAC,CAAC;gBACpD,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACnD,MAAM,WAAW,GAAG,MAAM,oBAAoB,CAAC,MAAM,CAAC,CAAC;gBAEvD,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,oBAAoB,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC9E,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC;SAAA;QAED,EAAE,CAAC,sBAAsB,EAAE,GAAS,EAAE;YACpC,MAAM,aAAa,CAAC,CAAO,MAAoB,EAAE,EAAE,gDAAC,OAAA,MAAM,WAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAA,GAAA,EAAE,GAAG,CAAC,CAAC;QACpG,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE,GAAS,EAAE;YAC3E,MAAM,aAAa,CAAC,2BAAY,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC;QACzE,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,QAAQ,QAAQ,EAAE,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,sCAAsC,EAAE,GAAS,EAAE;YACpD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;iBAChC,IAAI,CAAC,QAAQ,CAAC;iBACd,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC;iBAChC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAE9B,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,GAAS,EAAE;YAC/D,MAAM,OAAO,GAAG,MAAM,2BAAY,CAAC,gBAAgB,EAAE,CAAC;YAEtD,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAC,KAAK,EAAC,CAAC,CAAC;YACzE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,GAAS,EAAE;YAC3D,MAAM,OAAO,GAAG,MAAM,2BAAY,CAAC,gBAAgB,EAAE,CAAC;YACtD,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAE,OAAO,CAAC,GAAG,CAAE,EAAE,EAAC,CAAC,CAAC;YAC1E,MAAM,WAAW,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,WAAW,EAAC,CAAC,CAAC;YAElE,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,WAAW,EAAE,EAAE,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,GAAG,EAAC,CAAC,CAAC;YAC9F,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAS,EAAE;YAChD,MAAM,OAAO,GAAG,MAAM,2BAAY,CAAC,gBAAgB,EAAE,CAAC;YACtD,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAE,OAAO,CAAC,GAAG,CAAE,EAAE,EAAC,CAAC,CAAC;YAC1E,MAAM,WAAW,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,WAAW,EAAC,CAAC,CAAC;YAClE,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;YAE3B,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,WAAW,EAAE,EAAE,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;YACrG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACvC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACvD,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,8DAA8D,EAAE,GAAS,EAAE;YAC5E,MAAM,OAAO,GAAG,MAAM,2BAAY,CAAC,gBAAgB,EAAE,CAAC;YACtD,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAE,OAAO,CAAC,GAAG,CAAE,EAAE,EAAC,CAAC,CAAC;YAC1E,MAAM,WAAW,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,WAAW,EAAC,CAAC,CAAC;YAClE,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;YAC3B,mEAAmE;YACnE,MAAM,aAAa,GAAG,wBAAwB,CAAC;YAC/C,KAAK,CAAC,IAAI;gBACR,KAAK,CAAC,UAAU;sBACd,MAAM,GAAG,aAAa,GAAG,MAAM;sBAC/B,KAAK,CAAC,IAAI;sBACV,MAAM,GAAG,aAAa,GAAG,MAAM;sBAC/B,KAAK,CAAC,IAAI,CAAC;YACf,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;YAC7B,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;YAEvB,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,WAAW,EAAE,EAAE,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;YACrG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACvC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACrD,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACjF,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACrF,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,8DAA8D,EAAE,GAAS,EAAE;YAC5E,MAAM,OAAO,GAAG,MAAM,2BAAY,CAAC,gBAAgB,EAAE,CAAC;YACtD,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAE,OAAO,CAAC,GAAG,CAAE,EAAE,EAAC,CAAC,CAAC;YAC1E,MAAM,mBAAmB,GAAG,MAAM,2BAAY,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAC;YACvF,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;YAE3B,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,mBAAmB,EAAE,EAAE,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;YAC7G,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,QAAQ,EAAE,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,0BAA0B,EAAE,GAAS,EAAE;YACxC,MAAM,IAAI,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,WAAW,EAAC,CAAC,CAAC;YACpD,MAAM,OAAO,GAAG,MAAM,iBAAO,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,EAAE,GAAG,EAAE,CAAE,IAAI,CAAC,GAAG,CAAE,EAAE,EAAC,CAAC,CAAC;YACtE,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAE,OAAO,CAAC,GAAG,CAAE,EAAE,EAAC,CAAC,CAAC;YAC1E,MAAM,WAAW,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,WAAW,EAAC,CAAC,CAAC;YACjD,IAAK,CAAC,IAAI,IAAI,iCAAiC,CAAC;YAEjE,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,oBAAoB,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/F,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,+BAA+B,CAAC,CAAC;QAC/D,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,0DAA0D,EAAE,GAAS,EAAE;YACxE,MAAM,IAAI,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,WAAW,EAAC,CAAC,CAAC;YACpD,MAAM,OAAO,GAAG,MAAM,iBAAO,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,EAAE,GAAG,EAAE,CAAE,IAAI,CAAC,GAAG,CAAE,EAAE,EAAC,CAAC,CAAC;YACtE,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAE,OAAO,CAAC,GAAG,CAAE,EAAE,EAAC,CAAC,CAAC;YACzD,IAAK,CAAC,IAAI,IAAI,iCAAiC,CAAC;YACjE,MAAM,mBAAmB,GAAG,MAAM,2BAAY,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAC;YAEvF,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,oBAAoB,CAAC,mBAAmB,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACvG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,QAAQ,EAAE,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,oBAAoB,EAAE,GAAS,EAAE;YAClC,MAAM,IAAI,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,WAAW,EAAC,CAAC,CAAC;YACpD,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnD,MAAM,WAAW,GAAG,MAAM,WAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAE5D,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,uBAAuB,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;YACjF,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEhC,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,oBAAoB,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE,GAAS,EAAE;YACtE,MAAM,IAAI,GAAG,MAAM,WAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,WAAW,EAAC,CAAC,CAAC;YACpD,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnD,MAAM,WAAW,GAAG,MAAM,WAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAC5D,MAAM,mBAAmB,GAAG,MAAM,2BAAY,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAC;YAEvF,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,uBAAuB,CAAC,mBAAmB,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;YACzF,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEhC,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,oBAAoB,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"../../../../test/integration/unit/codeKataUnit.js","sourcesContent":["import * as chai from 'chai';\r\nimport chaiHttp = require('chai-http');\r\nimport {TestHelper} from '../../TestHelper';\r\nimport {Server} from '../../../src/server';\r\nimport {User} from '../../../src/models/User';\r\nimport {Lecture} from '../../../src/models/Lecture';\r\nimport {Course, ICourseModel} from '../../../src/models/Course';\r\nimport {FixtureUtils} from '../../../fixtures/FixtureUtils';\r\nimport {Unit} from '../../../src/models/units/Unit';\r\nimport {ICodeKataModel} from '../../../src/models/units/CodeKataUnit';\r\n\r\nchai.use(chaiHttp);\r\nconst app = new Server().app;\r\nconst BASE_URL = '/api/units';\r\nconst testHelper = new TestHelper(BASE_URL);\r\n\r\ndescribe(`CodeKataUnit ${BASE_URL}`, () => {\r\n  const model = {\r\n    _course: '',\r\n    name: 'Search and Replace',\r\n    description: '...',\r\n    progressable: true,\r\n    weight: 0,\r\n    __t: 'code-kata',\r\n    definition: '// Task: Manipulate the targetSet, so it only contains the values \"Hello\" and \"h_da\"' +\r\n    '\\n' +\r\n    '\\nlet targetSet = new Set([\"Hello\", \"there\"]);',\r\n    code: 'targetSet.add(\"h_da\");' +\r\n    '\\ntargetSet.delete(\"there\");',\r\n    test: 'validate();' +\r\n    '\\n' +\r\n    '\\nfunction validate() {' +\r\n    '\\n\\treturn targetSet.has(\"Hello\") && targetSet.has(\"h_da\") && targetSet.size === 2;' +\r\n    '\\n' +\r\n    '}'\r\n  };\r\n\r\n  beforeEach(async () => {\r\n    await testHelper.resetForNextTest();\r\n  });\r\n\r\n  describe(`GET ${BASE_URL}`, () => {\r\n    async function commonGetTest (getUserForCourseFunc: Function, status: number) {\r\n      const unit = await Unit.findOne({__t: 'code-kata'});\r\n      const course = await Course.findById(unit._course);\r\n      const courseAdmin = await getUserForCourseFunc(course);\r\n\r\n      const res = await testHelper.commonUserGetRequest(courseAdmin, `/${unit.id}`);\r\n      res.status.should.be.equal(status);\r\n    }\r\n\r\n    it('should get unit data', async () => {\r\n      await commonGetTest(async (course: ICourseModel) => await User.findById(course.courseAdmin), 200);\r\n    });\r\n\r\n    it('should deny access to unit data if the user is unauthorized', async () => {\r\n      await commonGetTest(FixtureUtils.getUnauthorizedStudentForCourse, 403);\r\n    });\r\n  });\r\n\r\n  describe(`POST ${BASE_URL}`, () => {\r\n    it('should fail with wrong authorization', async () => {\r\n      const res = await chai.request(app)\r\n        .post(BASE_URL)\r\n        .set('Authorization', 'JWT asdf')\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(401);\r\n    });\r\n\r\n    it('should fail with BadRequest (missing lectureId)', async () => {\r\n      const teacher = await FixtureUtils.getRandomTeacher();\r\n\r\n      const res = await testHelper.commonUserPostRequest(teacher, '', {model});\r\n      res.status.should.be.equal(400);\r\n    });\r\n\r\n    it('should fail with BadRequest (missing model)', async () => {\r\n      const lecture = await FixtureUtils.getRandomLecture();\r\n      const course = await Course.findOne({lectures: { $in: [ lecture._id ] }});\r\n      const courseAdmin = await User.findOne({_id: course.courseAdmin});\r\n\r\n      const res = await testHelper.commonUserPostRequest(courseAdmin, '', {lectureId: lecture._id});\r\n      res.status.should.be.equal(400);\r\n    });\r\n\r\n    it('should create a new codeKataUnit', async () => {\r\n      const lecture = await FixtureUtils.getRandomLecture();\r\n      const course = await Course.findOne({lectures: { $in: [ lecture._id ] }});\r\n      const courseAdmin = await User.findOne({_id: course.courseAdmin});\r\n      model._course = course._id;\r\n\r\n      const res = await testHelper.commonUserPostRequest(courseAdmin, '', {lectureId: lecture._id, model});\r\n      res.status.should.be.equal(200);\r\n      res.body.name.should.equal(model.name);\r\n      res.body.description.should.equal(model.description);\r\n    });\r\n\r\n    it('should create a new codeKataUnit (entire code in model.code)', async () => {\r\n      const lecture = await FixtureUtils.getRandomLecture();\r\n      const course = await Course.findOne({lectures: { $in: [ lecture._id ] }});\r\n      const courseAdmin = await User.findOne({_id: course.courseAdmin});\r\n      model._course = course._id;\r\n      // The unitForm posts a new Kata with the entire code in model.code\r\n      const areaSeperator = '//####################';\r\n      model.code =\r\n        model.definition\r\n        + '\\n\\n' + areaSeperator + '\\n\\n'\r\n        + model.code\r\n        + '\\n\\n' + areaSeperator + '\\n\\n'\r\n        + model.test;\r\n      model.definition = undefined;\r\n      model.test = undefined;\r\n\r\n      const res = await testHelper.commonUserPostRequest(courseAdmin, '', {lectureId: lecture._id, model});\r\n      res.status.should.be.equal(200);\r\n      res.body.name.should.equal(model.name);\r\n      res.body.description.should.equal(model.description);\r\n      res.body.unitCreator.profile.lastName.should.equal(courseAdmin.profile.lastName);\r\n      res.body.unitCreator.profile.firstName.should.equal(courseAdmin.profile.firstName);\r\n    });\r\n\r\n    it('should fail to create a new unit for an unauthorized teacher', async () => {\r\n      const lecture = await FixtureUtils.getRandomLecture();\r\n      const course = await Course.findOne({lectures: { $in: [ lecture._id ] }});\r\n      const unauthorizedTeacher = await FixtureUtils.getUnauthorizedTeacherForCourse(course);\r\n      model._course = course._id;\r\n\r\n      const res = await testHelper.commonUserPostRequest(unauthorizedTeacher, '', {lectureId: lecture._id, model});\r\n      res.status.should.be.equal(403);\r\n    });\r\n  });\r\n\r\n  describe(`PUT ${BASE_URL}`, () => {\r\n    it('should update a codeKata', async () => {\r\n      const unit = await Unit.findOne({__t: 'code-kata'});\r\n      const lecture = await Lecture.findOne({units: { $in: [ unit._id ] }});\r\n      const course = await Course.findOne({lectures: { $in: [ lecture._id ] }});\r\n      const courseAdmin = await User.findOne({_id: course.courseAdmin});\r\n      (<ICodeKataModel>unit).test += '\\n// Test if we can edit a Kata';\r\n\r\n      const res = await testHelper.commonUserPutRequest(courseAdmin, `/${unit.id}`, unit.toObject());\r\n      res.status.should.be.equal(200);\r\n      res.body.test.should.string('// Test if we can edit a Kata');\r\n    });\r\n\r\n    it('should fail to update a unit for an unauthorized teacher', async () => {\r\n      const unit = await Unit.findOne({__t: 'code-kata'});\r\n      const lecture = await Lecture.findOne({units: { $in: [ unit._id ] }});\r\n      const course = await Course.findOne({lectures: { $in: [ lecture._id ] }});\r\n      (<ICodeKataModel>unit).test += '\\n// Test if we can edit a Kata';\r\n      const unauthorizedTeacher = await FixtureUtils.getUnauthorizedTeacherForCourse(course);\r\n\r\n      const res = await testHelper.commonUserPutRequest(unauthorizedTeacher, `/${unit.id}`, unit.toObject());\r\n      res.status.should.be.equal(403);\r\n    });\r\n  });\r\n\r\n  describe(`DELETE ${BASE_URL}`, () => {\r\n    it('should delete unit', async () => {\r\n      const unit = await Unit.findOne({__t: 'code-kata'});\r\n      const course = await Course.findById(unit._course);\r\n      const courseAdmin = await User.findById(course.courseAdmin);\r\n\r\n      const res = await testHelper.commonUserDeleteRequest(courseAdmin, `/${unit.id}`);\r\n      res.status.should.be.equal(200);\r\n\r\n      const res2 = await testHelper.commonUserGetRequest(courseAdmin, `/${unit.id}`);\r\n      res2.status.should.be.equal(404);\r\n    });\r\n\r\n    it('should fail to delete unit for an unauthorized teacher', async () => {\r\n      const unit = await Unit.findOne({__t: 'code-kata'});\r\n      const course = await Course.findById(unit._course);\r\n      const courseAdmin = await User.findById(course.courseAdmin);\r\n      const unauthorizedTeacher = await FixtureUtils.getUnauthorizedTeacherForCourse(course);\r\n\r\n      const res = await testHelper.commonUserDeleteRequest(unauthorizedTeacher, `/${unit.id}`);\r\n      res.status.should.be.equal(403);\r\n\r\n      const res2 = await testHelper.commonUserGetRequest(courseAdmin, `/${unit.id}`);\r\n      res2.status.should.be.equal(200);\r\n    });\r\n  });\r\n});\r\n"]}