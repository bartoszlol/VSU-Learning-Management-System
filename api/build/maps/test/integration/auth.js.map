{"version":3,"sources":["test/integration/auth.ts"],"names":[],"mappings":"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","file":"../../../test/integration/auth.js","sourcesContent":["import * as chai from 'chai';\r\nimport {Server} from '../../src/server';\r\nimport {FixtureLoader} from '../../fixtures/FixtureLoader';\r\nimport {User} from '../../src/models/User';\r\nimport * as errorCodes from '../../src/config/errorCodes';\r\nimport {WhitelistUser} from '../../src/models/WhitelistUser';\r\nimport {IUser} from '../../../shared/models/IUser';\r\nimport {Course} from '../../src/models/Course';\r\nimport {FixtureUtils} from '../../fixtures/FixtureUtils';\r\nimport {RoleAuthorization} from '../../src/security/RoleAuthorization';\r\nimport {Action, UnauthorizedError} from 'routing-controllers';\r\nimport chaiHttp = require('chai-http');\r\nimport config from '../../src/config/main';\r\n\r\nchai.use(chaiHttp);\r\nconst should = chai.should();\r\nconst app = new Server().app;\r\nconst BASE_URL = '/api/auth';\r\nconst fixtureLoader = new FixtureLoader();\r\n\r\nfunction delay(ms: number) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\ndescribe('Auth', () => {\r\n  // Before each test we reset the database\r\n  beforeEach(async () => {\r\n    await fixtureLoader.load();\r\n  });\r\n\r\n  describe('RoleAuthorization', () => {\r\n    it('should handle missing jwtData by throwing UnauthorizedError', async () => {\r\n      const invalidAction: Action = { request: {}, response: {} };\r\n      await chai.expect(() => RoleAuthorization.checkAuthorization(invalidAction, [])).to.throw(UnauthorizedError);\r\n    });\r\n\r\n    async function accessTest(user: IUser, roles: string[], expectedResult: boolean) {\r\n      const request: any = { jwtData: { tokenPayload: { _id: user._id } } };\r\n      const action: Action = { request, response: {} };\r\n      chai.expect(await RoleAuthorization.checkAuthorization(action, roles)).to.equal(expectedResult);\r\n    }\r\n\r\n    it('should allow access for a user with valid parameters', async () => {\r\n      const student = await FixtureUtils.getRandomStudent();\r\n      await accessTest(student, ['student'], true);\r\n    });\r\n\r\n    it('should deny access for a user with mismatching role', async () => {\r\n      const student = await FixtureUtils.getRandomStudent();\r\n      await accessTest(student, ['teacher'], false);\r\n    });\r\n  });\r\n\r\n  describe(`POST ${BASE_URL}/login`, () => {\r\n    it('should login as student', async () => {\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/login`)\r\n        .send({\r\n          'email': 'student1@test.local',\r\n          'password': 'test1234'\r\n        });\r\n\r\n      res.status.should.be.equal(200);\r\n      res.body.user.email.should.be.equal('student1@test.local');\r\n    });\r\n\r\n    it('should login as teacher', async () => {\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/login`)\r\n        .send({\r\n          'email': 'teacher1@test.local',\r\n          'password': 'test1234'\r\n        });\r\n\r\n      res.status.should.be.equal(200);\r\n      res.body.user.email.should.be.equal('teacher1@test.local');\r\n    });\r\n\r\n    it('should login as admin', async () => {\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/login`)\r\n        .send({\r\n          'email': 'admin@test.local',\r\n          'password': 'test1234'\r\n        });\r\n\r\n      res.status.should.be.equal(200);\r\n      res.body.user.email.should.be.equal('admin@test.local');\r\n    });\r\n\r\n    it('should fail with empty password', async () => {\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/login`)\r\n        .send({\r\n          'email': 'student2@test.local',\r\n          'password': ''\r\n        });\r\n\r\n      res.status.should.be.equal(400);\r\n      res.error.text.should.be.equal('Bad Request');\r\n    });\r\n\r\n    it('should fail without password property', async () => {\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/login`)\r\n        .send({\r\n          'email': 'student2@test.local',\r\n        });\r\n\r\n      res.status.should.be.equal(400);\r\n      res.error.text.should.be.equal('Bad Request');\r\n    });\r\n\r\n    it('should fail when email not found', async () => {\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/login`)\r\n        .send({\r\n          'email': 'invalid@test.local',\r\n          'password': 'invalid',\r\n        });\r\n\r\n      res.status.should.be.equal(401);\r\n    });\r\n\r\n    it('should fail when password wrong', async () => {\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/login`)\r\n        .send({\r\n          'email': 'student3@test.local',\r\n          'password': 'invalid',\r\n        });\r\n\r\n      res.status.should.be.equal(401);\r\n    });\r\n\r\n    it('should fail credentials correct but not active', async () => {\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/login`)\r\n        .send({\r\n          'email': 'student31@test.local',\r\n          'password': 'test1234',\r\n        });\r\n\r\n      res.status.should.be.equal(401);\r\n    });\r\n  });\r\n\r\n  describe(`POST ${BASE_URL}/register`, () => {\r\n    it('should fail (email address is already in use)', async () => {\r\n      const user = await FixtureUtils.getRandomUser();\r\n      const registerUser = user;\r\n      registerUser.uid = '99999999';\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/register`)\r\n        .send(registerUser)\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(400);\r\n      res.body.name.should.be.equal('BadRequestError');\r\n      res.body.message.should.be.equal(errorCodes.errorCodes.mail.duplicate.code);\r\n    });\r\n\r\n    it('should fail (register as teacher without teacher email)', async () => {\r\n      const teacher = await FixtureUtils.getRandomTeacher();\r\n      const registerUser = teacher;\r\n      registerUser.email = 'teacher@student.local';\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/register`)\r\n        .send(registerUser)\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(400);\r\n      res.body.name.should.be.equal('BadRequestError');\r\n      res.body.message.should.be.equal(errorCodes.errorCodes.mail.noTeacher.code);\r\n    });\r\n\r\n    it('should fail (matriculation number is already in use)', async () => {\r\n      const student = await FixtureUtils.getRandomStudent();\r\n      const registerUser = student;\r\n      registerUser.email = 'student0815@neu.local';\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/register`)\r\n        .send(registerUser)\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(400);\r\n      res.body.name.should.be.equal('BadRequestError');\r\n      res.body.message.should.be.equal(errorCodes.errorCodes.duplicateUid.code);\r\n    });\r\n\r\n    it('should pass', async () => {\r\n      const registerUser = {\r\n        uid: '5468907',\r\n        firstName: 'firstName',\r\n        lastName: 'lastName',\r\n        role: 'student',\r\n        password: 'test1234',\r\n        email: 'local@test.local.de'\r\n      };\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/register`)\r\n        .send(registerUser)\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(204);\r\n    });\r\n\r\n\r\n    it('should pass and enroll into course', async () => {\r\n      const registerUser = {\r\n        uid: '5468907',\r\n        firstName: 'firstName',\r\n        lastName: 'lastName',\r\n        role: 'student',\r\n        password: 'test1234',\r\n        email: 'local@test.local.de'\r\n      };\r\n\r\n      const whitelistUser = await WhitelistUser.create({\r\n        uid: registerUser.uid,\r\n        firstName: registerUser.firstName,\r\n        lastName: registerUser.lastName\r\n      });\r\n      const noElemCourse = await Course.create({\r\n        name: 'Test Course 1',\r\n        enrollType: 'whitelist',\r\n        whitelist: []\r\n      });\r\n      const elemCourse = await Course.create({\r\n        name: 'Test Course 2',\r\n        enrollType: 'whitelist',\r\n        whitelist: [whitelistUser]\r\n      });\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/register`)\r\n        .send(registerUser)\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(204);\r\n      // Get updated Course.\r\n      const resultNoElemCourse = await Course.findById(noElemCourse._id)\r\n        .populate('whitelist')\r\n        .populate('students');\r\n      const resultElemCourse = await Course.findById(elemCourse._id)\r\n        .populate('whitelist')\r\n        .populate('students');\r\n      resultNoElemCourse.whitelist.length.should.be.equal(0);\r\n      resultNoElemCourse.students.length.should.be.equal(0);\r\n      resultElemCourse.whitelist.length.should.be.equal(1);\r\n      resultElemCourse.students.length.should.be.equal(1);\r\n      resultElemCourse.whitelist[0].uid.should.be.equal(resultElemCourse.students[0].uid);\r\n    });\r\n\r\n    it('should fail (registration as admin)', async () => {\r\n      const teacher = await FixtureUtils.getRandomTeacher();\r\n      const registerUser = teacher;\r\n      registerUser.email = 'teacher0815@test.local';\r\n      registerUser.role = 'admin';\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/register`)\r\n        .send(registerUser)\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(400);\r\n      res.body.name.should.be.equal('BadRequestError');\r\n      res.body.message.should.be.equal('You can only sign up as student or teacher');\r\n    });\r\n  });\r\n\r\n  describe(`POST ${BASE_URL}/activationresend`, () => {\r\n    it('should fail (user not found)', async () => {\r\n      const user = await FixtureUtils.getRandomUser();\r\n      const resendActivationUser = user;\r\n      resendActivationUser.uid = '99999999';\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/activationresend`)\r\n        .send({\r\n          'lastname': resendActivationUser.profile.lastName,\r\n          'uid': resendActivationUser.uid,\r\n          'email': resendActivationUser.email\r\n        })\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(400);\r\n      res.body.name.should.be.equal('BadRequestError');\r\n      res.body.message.should.be.equal(errorCodes.errorCodes.user.userNotFound.code);\r\n    });\r\n\r\n    it('should fail (user already activated)', async () => {\r\n      const user = await FixtureUtils.getRandomActiveStudent();\r\n      const resendActivationUser = user;\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/activationresend`)\r\n        .send({\r\n          'lastname': resendActivationUser.profile.lastName,\r\n          'uid': resendActivationUser.uid,\r\n          'email': resendActivationUser.email\r\n        })\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(400);\r\n      res.body.name.should.be.equal('BadRequestError');\r\n      res.body.message.should.be.equal(errorCodes.errorCodes.user.userAlreadyActive.code);\r\n    });\r\n\r\n    // reduce timeTillNextActivationResendMin for testing to 15s\r\n    config.timeTilNextActivationResendMin = 0.25;\r\n\r\n    it('should fail (can only send every ' + config.timeTilNextActivationResendMin + ' min)', async () => {\r\n      const student = await FixtureUtils.getRandomInactiveStudent();\r\n      const resendActivationUser = student;\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/activationresend`)\r\n        .send({\r\n          'lastname': resendActivationUser.profile.lastName,\r\n          'uid': resendActivationUser.uid,\r\n          'email': resendActivationUser.email\r\n        })\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(503);\r\n      res.body.name.should.be.equal('HttpError');\r\n      res.should.have.header('retry-after');\r\n      res.body.message.should.be.equal(errorCodes.errorCodes.user.retryAfter.code);\r\n    });\r\n\r\n    it('should fail (email already in use)', async () => {\r\n      await delay(Number(config.timeTilNextActivationResendMin) * 60000);\r\n      const student = await FixtureUtils.getRandomInactiveStudent();\r\n      const resendActivationUser = student;\r\n      const student2 = await FixtureUtils.getRandomActiveStudent();\r\n      const existingUser = student2;\r\n      resendActivationUser.email = existingUser.email;\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/activationresend`)\r\n        .send({\r\n          'lastname': resendActivationUser.profile.lastName,\r\n          'uid': resendActivationUser.uid,\r\n          'email': resendActivationUser.email\r\n        })\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(400);\r\n      res.body.name.should.be.equal('BadRequestError');\r\n      res.body.message.should.be.equal(errorCodes.errorCodes.mail.duplicate.code);\r\n    }).timeout(Number(config.timeTilNextActivationResendMin) * 61000);\r\n\r\n    it('should pass', async () => {\r\n      await delay(Number(config.timeTilNextActivationResendMin) * 60000);\r\n      const student = await FixtureUtils.getRandomInactiveStudent();\r\n      const resendActivationUser = student;\r\n\r\n      const res = await chai.request(app)\r\n        .post(`${BASE_URL}/activationresend`)\r\n        .send({\r\n          'lastname': resendActivationUser.profile.lastName,\r\n          'uid': resendActivationUser.uid,\r\n          'email': resendActivationUser.email\r\n        })\r\n        .catch(err => err.response);\r\n\r\n      res.status.should.be.equal(204);\r\n    }).timeout(Number(config.timeTilNextActivationResendMin) * 61000);\r\n  });\r\n});\r\n\r\n"]}