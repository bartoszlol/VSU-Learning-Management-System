{"version":3,"sources":["test/integration/config.ts"],"names":[],"mappings":"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","file":"../../../test/integration/config.js","sourcesContent":["import * as chai from 'chai';\r\nimport {Server} from '../../src/server';\r\nimport {FixtureLoader} from '../../fixtures/FixtureLoader';\r\nimport chaiHttp = require('chai-http');\r\nimport {FixtureUtils} from '../../fixtures/FixtureUtils';\r\nimport {JwtUtils} from '../../src/security/JwtUtils';\r\n\r\nchai.use(chaiHttp);\r\nconst should = chai.should();\r\nconst app = new Server().app;\r\nconst BASE_URL = '/api/config';\r\nconst fixtureLoader = new FixtureLoader();\r\n\r\ndescribe('Config', () => {\r\n  // Before each test we reset the database\r\n  beforeEach(async () => {\r\n    await fixtureLoader.load();\r\n  });\r\n\r\n  describe(`GET ${BASE_URL}/public/foo`, () => {\r\n    it('should fail (foo)', async () => {\r\n      const res = await chai.request(app)\r\n        .get(`${BASE_URL}/public/foo`)\r\n        .catch(err => err.response);\r\n      res.status.should.be.equal(401);\r\n      res.body.name.should.be.equal('UnauthorizedError');\r\n    });\r\n\r\n    it('should pass (legalnotice)', async () => {\r\n      const res = await chai.request(app)\r\n        .get(`${BASE_URL}/public/legalnotice`)\r\n        .catch(err => err.response);\r\n      res.status.should.be.equal(200);\r\n      res.body.name.should.be.equal('legalnotice');\r\n    });\r\n  });\r\n\r\n  describe(`PUT ${BASE_URL}/legalnotice`, () => {\r\n    it('should pass', async () => {\r\n      const admin = await FixtureUtils.getRandomAdmin();\r\n\r\n      const res = await chai.request(app)\r\n        .put(`${BASE_URL}/legalnotice`)\r\n        .set('Cookie', `token=${JwtUtils.generateToken(admin)}`)\r\n        .send({data: '# Legalnotice'});\r\n      res.status.should.be.equal(200);\r\n    });\r\n  });\r\n\r\n  describe(`GET ${BASE_URL}/foo`, () => {\r\n    it('should pass', async () => {\r\n      const admin = await FixtureUtils.getRandomAdmin();\r\n\r\n      await chai.request(app)\r\n        .put(`${BASE_URL}/foo`)\r\n        .set('Cookie', `token=${JwtUtils.generateToken(admin)}`)\r\n        .send({data: 'bar'});\r\n\r\n      const res = await chai.request(app)\r\n        .get(`${BASE_URL}/foo`)\r\n        .set('Cookie', `token=${JwtUtils.generateToken(admin)}`)\r\n        .catch(err => err.response);\r\n      res.status.should.be.equal(200);\r\n      res.body.value.should.be.equal('bar');\r\n    });\r\n  });\r\n});\r\n\r\n"]}